{"id":289198316,"lang":"python3","time":"1 year, 6 months","timestamp":1577535654,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/289198316/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"N/A","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom collections import deque\nclass Solution:\n    def levelOrder(self, root: 'Node') -> List[List[int]]:\n        if not root:\n            return [[]]\n        ans = []\n        queue = deque([root])\n        while queue:\n            node_list = []\n            val_list = []\n            for node in queue:\n                val_list.append(node.val)\n                if node.children:\n                    for child in node.children:\n                        node_list.append(child)\n            ans.append(val_list)\n            queue = deque(node_list)\n        return ans","compare_result":"1101111111111111111111111111111111111","title_slug":"n-ary-tree-level-order-traversal"}