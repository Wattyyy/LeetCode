{"id":316618574,"lang":"python3","time":"1 year, 3 months","timestamp":1585369867,"status_display":"Accepted","runtime":"652 ms","url":"/submissions/detail/316618574/","is_pending":"Not Pending","title":"Maximum Product of Word Lengths","memory":"13.1 MB","code":"from collections import defaultdict\nclass Solution:\n    def word2bit(self, word):\n        res = 0\n        for char in word:\n            power = ord(char) - 97\n            res = res | (2 ** power)\n        return res\n\n    def maxProduct(self, words):\n        dic = defaultdict(int)\n        for word in words:\n            res = self.word2bit(word)\n            dic[word] = res\n        ans = 0\n        for i, word1 in enumerate(words):\n            for j in range(i+1, len(words)):\n                word2 = words[j]\n                bit1, bit2 = dic[word1], dic[word2]\n                if bit1 & bit2 == 0:\n                    ans = max(ans, len(word1) * len(word2))\n        return ans\n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-word-lengths"}