{"id":488746491,"lang":"python3","time":"2 months, 1 week","timestamp":1620134294,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/488746491/","is_pending":"Not Pending","title":"Non-decreasing Array","memory":"N/A","code":"from typing import List\nclass Solution:\n    def checkPossibility(self, nums: List[int]) -> bool:\n        if len(nums) == 1:\n            return True\n        if len(nums) == 2:\n            return (nums[0] <= nums[1])\n        part_max = nums[0]\n        modified = False\n        for i in range(len(nums)):\n            if i <= 1:\n                continue\n            if nums[i-1] > nums[i]:\n                # modify previous element\n                if part_max <= nums[i]:\n                    nums[i-1] = nums[i]\n                    part_max = nums[i]\n                    modified = True\n                # modify current element\n                elif not modified:\n                    nums[i] = nums[i-1]\n                    part_max = nums[i-1]\n                    modified = True\n                else:\n                    return False\n            else:\n                part_max = nums[i-1]\n\n        return True\n                    ","compare_result":"10011111111011111011101111001011111111101111111111011111011111011111000011011111111111111111000010000111111111111111000010000111111111111111000010000111111111111111111111111111111111111110011111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"non-decreasing-array"}