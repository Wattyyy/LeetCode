// https://leetcode.com/problems/non-decreasing-array

from typing import List
class Solution:
    def checkPossibility(self, nums: List[int]) -> bool:
        if len(nums) == 1:
            return True
        if len(nums) == 2:
            return True
        if len(nums) == 3:
            return not (nums[2] < nums[1] < nums[0])
        part_max = nums[0]
        modified = False
        for i in range(len(nums)):
            if i <= 1:
                continue
            if nums[i-1] > nums[i]:
                # modify previous element
                if part_max <= nums[i]:
                    nums[i-1] = nums[i]
                    part_max = nums[i]
                    modified = True
                # modify current element
                elif not modified:
                    nums[i] = nums[i-1]
                    part_max = nums[i-1]
                    modified = True
                else:
                    return False
            else:
                part_max = nums[i-1]

        return True
                    