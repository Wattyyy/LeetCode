{"id":306792015,"lang":"python3","time":"1 year, 4 months","timestamp":1582647946,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/306792015/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"19.5 MB","code":"from collections import deque\nclass Solution:\n    def maxSlidingWindow(self, nums, k):\n        if not nums:\n            return []\n        val_deque = deque([])\n        idx_deque = deque([])\n        ans = [0] * (len(nums) - k + 1)\n        for i in range(k):\n            if (len(val_deque) == 0) or (val_deque[-1] >= nums[i]):\n                val_deque.append(nums[i])\n                idx_deque.append(i)\n            else:\n                while val_deque and val_deque[-1] < nums[i]:\n                    val_deque.pop()\n                    idx_deque.pop()\n                val_deque.append(nums[i])\n                idx_deque.append(i)\n                \n        for i in range(k, len(nums)):\n            if (len(val_deque) == k) or (idx_deque[0] == i - k):    \n                val = val_deque.popleft()\n                idx_deque.popleft()\n            else:\n                val = val_deque[0]    \n            ans[i-k] = val\n            \n            if len(val_deque) == 0 or (val_deque[-1] >= nums[i]):\n                val_deque.append(nums[i])\n                idx_deque.append(i)\n            else:\n                while val_deque and val_deque[-1] < nums[i]:\n                    val_deque.pop()\n                    idx_deque.pop()\n                val_deque.append(nums[i])\n                idx_deque.append(i)\n                \n        ans[-1] = val_deque[0]\n        return ans\n                \n            \n            \n\n        \n        ","compare_result":"111111111111111111","title_slug":"sliding-window-maximum"}