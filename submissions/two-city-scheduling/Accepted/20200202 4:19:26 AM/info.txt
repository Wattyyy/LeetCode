{"id":299309399,"lang":"python3","time":"1 year, 5 months","timestamp":1580584766,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/299309399/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"12.8 MB","code":"# https://leetcode.com/problems/two-city-scheduling/\n\n# step1: allocate 2N people to city A\n# step2: move N people to B greedily \n\nclass Solution(object):\n    def twoCitySchedCost(self, costs):\n        length = len(costs)\n        switch_cost = []\n        total_cost = 0\n        for i in range(length):\n            a, b = costs[i]\n            switch_cost.append(b-a)\n            total_cost += a\n        switch_cost = sorted(switch_cost)\n        for i in range(length//2):\n            total_cost += switch_cost[i]\n        return total_cost","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"two-city-scheduling"}