{"id":519670023,"lang":"python3","time":"4Â days, 23Â hours","timestamp":1625812201,"status_display":"Accepted","runtime":"6892 ms","url":"/submissions/detail/519670023/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"40.4 MB","code":"class Solution:\n    def findLength(self, nums1: List[int], nums2: List[int]) -> int:\n        nums1 = [-1] + nums1\n        nums2 = [-1] + nums2\n        dp = [[0 for _ in range(len(nums2))] for __ in range(len(nums1))]\n        ans = 0\n        for i in range(1, len(nums1)):\n            for j in range(1, len(nums2)):\n                if nums1[i] == nums2[j]:\n                    dp[i][j] = dp[i-1][j-1] + 1\n                else:\n                    dp[i][j] = 0\n                ans = max(ans, dp[i][j])\n        return ans\n                    \n                \n                \n            \n        \n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray"}