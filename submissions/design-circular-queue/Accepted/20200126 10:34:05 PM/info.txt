{"id":297556203,"lang":"python3","time":"1 year, 5 months","timestamp":1580045645,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/297556203/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"13 MB","code":"class MyCircularQueue:\n\n    def __init__(self, k):\n        self.queue = []\n        self.max = k\n        self.rear = -1\n        self.front = -1\n        \n        \n    def enQueue(self, value):\n        if len(self.queue) == self.max:\n            return False\n        if not self.queue:\n            self.queue.append(value)\n            self.rear = value\n            self.front = value\n            return True\n        else:\n            self.queue.append(value)\n            self.rear = value\n            return True        \n\n        \n    def deQueue(self):\n        if not self.queue:\n            return False\n        if len(self.queue) == 1:\n            self.queue.pop(0)\n            self.rear = -1\n            self.front = -1\n            return True\n        else:\n            self.queue.pop(0)\n            self.front = self.queue[0]\n            return True\n\n\n    def Front(self):\n        return self.front\n\n    \n    def Rear(self):\n        return self.rear\n\n    \n    def isEmpty(self):\n        return not self.queue\n        \n\n    def isFull(self):\n        return len(self.queue) == self.max","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"design-circular-queue"}