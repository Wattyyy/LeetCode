{"id":353883556,"lang":"python3","time":"1Â year","timestamp":1592201621,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/353883556/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"from collections import defaultdict\nimport heapq\nclass Solution:\n    def findCheapestPrice(self, n, flights, src, dst, K):\n        graph = defaultdict(list)\n        for u, v, w in flights:\n            graph[u].append([v, w])\n\n        cost = [float('inf') for _ in range(n)]\n        cost[src] = 0\n        pq = []\n        heapq.heapify(pq)\n        for v, w in graph[src]:\n            # weight, current_vertex, previous_vertex, count\n            pq.append([w, v, src, 0])\n        \n        while pq:\n            w, v, prev, cnt = heapq.heappop(pq)\n            if cost[prev] + w < cost[v] and cnt <= K:\n                cost[v] = cost[prev] + w\n            for nv, nw in graph[v]:\n                heapq.heappush(pq, [nw, nv, v, cnt+1])\n\n        return cost[dst]\n\n\n\n\n\n            \n\n","compare_result":"110000000000000000000000000000000000000000000","title_slug":"cheapest-flights-within-k-stops"}