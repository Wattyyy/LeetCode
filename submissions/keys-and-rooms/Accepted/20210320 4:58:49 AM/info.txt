{"id":469903335,"lang":"python3","time":"3 months, 3 weeks","timestamp":1616183929,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/469903335/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"15 MB","code":"from typing import List\nfrom collections import defaultdict, deque\n\nclass Solution:\n    def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:\n        if len(rooms) == 1:\n            return True\n        graph = defaultdict(list)\n        for i, room in enumerate(rooms):\n            for key in room:\n                graph[i].append(key)\n        visited = set()\n        queue = deque([0])\n        while queue:\n            v = queue.popleft()\n            visited.add(v)\n            for nv in graph[v]:\n                if nv not in visited:\n                    queue.append(nv)\n\n        return len(visited) == len(rooms)\n\n\n\n\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms"}