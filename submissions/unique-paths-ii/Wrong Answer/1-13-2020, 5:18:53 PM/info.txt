{"id":293780837,"lang":"python3","time":"1 year, 6 months","timestamp":1578903533,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293780837/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid):\n        if not obstacleGrid:\n            return 0\n        M = len(obstacleGrid)\n        N = len(obstacleGrid[0])\n        dp = [[0 for _ in range(N)] for __ in range(M)]\n        dp[0][0] = 1\n        for m in range(M):\n            for n in range(N):\n                if m==0 and n==0:\n                    continue\n                if obstacleGrid[m][n]==1:\n                    dp[m][n] = 0\n                else:\n                    if m==0:\n                        dp[m][n] = dp[m][n-1]\n                    elif n==0:\n                        dp[m][n] = dp[m-1][n]\n                    else:\n                        dp[m][n] = dp[m-1][n] + dp[m][n-1]\n        return dp[M-1][N-1]\n        \n        \n        ","compare_result":"1101101110111111011111111101111111111111111","title_slug":"unique-paths-ii"}