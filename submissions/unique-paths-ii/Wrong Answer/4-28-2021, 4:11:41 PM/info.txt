{"id":486182396,"lang":"python3","time":"2 months, 2 weeks","timestamp":1619593901,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/486182396/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        R, C = len(obstacleGrid), len(obstacleGrid[0])\n        dp = [[0 for _ in range(C)] for __ in range(R)]\n        dp[0][0] = 1\n        for r in range(R):\n            for c in range(C):\n                if (r == c == 0) or (obstacleGrid[r][c] == 1):\n                    continue\n                if 0 <= r - 1:\n                    dp[r][c] += dp[r-1][c]\n                if 0 <= c - 1:\n                    dp[r][c] += dp[r][c-1]\n        return dp[-1][-1]\n        \n        ","compare_result":"11110110111011110111111111011111111111111","title_slug":"unique-paths-ii"}