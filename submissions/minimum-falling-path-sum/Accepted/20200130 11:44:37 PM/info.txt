{"id":298742127,"lang":"python3","time":"1 year, 5 months","timestamp":1580395477,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/298742127/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"13.3 MB","code":"class Solution:\n    def minFallingPathSum(self, A):\n        if not A:\n            return 0\n        R, C = len(A), len(A[0])\n        dp = [[0 for _ in range(C)] for __ in range(R)]\n        for c in range(C):\n            dp[0][c] = A[0][c]\n        \n        for r in range(1, R):\n            for c in range(C):\n                if c == 0:\n                    dp[r][c] = min(dp[r-1][c] + A[r][c], dp[r-1][c+1] + A[r][c])\n                elif c == C - 1:\n                    dp[r][c] = min(dp[r-1][c-1] + A[r][c], dp[r-1][c] + A[r][c])\n                else:\n                    dp[r][c] = min(dp[r-1][c-1] + A[r][c], dp[r-1][c] + A[r][c], dp[r-1][c+1] + A[r][c])\n        return min(dp[R-1])\n                    \n        ","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum"}