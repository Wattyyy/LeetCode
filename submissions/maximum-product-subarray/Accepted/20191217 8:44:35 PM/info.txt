{"id":286618123,"lang":"python3","time":"1 year, 6 months","timestamp":1576583075,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/286618123/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"14 MB","code":"class Solution:\n    def maxProduct(self, nums):\n        if not nums:\n            return 0\n        max_dp = [nums[0] for _ in range(len(nums))]\n        min_dp = [nums[0] for _ in range(len(nums))]\n        ans = nums[0]\n        for i in range(1, len(nums)):\n            if nums[i]>0:\n                max_dp[i] = max(max_dp[i-1]*nums[i], nums[i])\n                min_dp[i] = min(min_dp[i-1]*nums[i], nums[i])\n            else:\n                max_dp[i] = max(min_dp[i-1]*nums[i], nums[i])\n                min_dp[i] = min(max_dp[i-1]*nums[i], nums[i])\n            ans = max(ans, max_dp[i])\n        return ans\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}