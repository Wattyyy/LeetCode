{"id":361020982,"lang":"python3","time":"1Â year","timestamp":1593674134,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/361020982/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom collections import deque\n\nclass Solution:\n    def levelOrderBottom(self, root):\n        if not root:\n            return []\n        self.ans = deque([])\n        queue = [root]\n        while queue:\n            tmp = []\n            next_queue = []\n            for node in queue:\n                tmp.append(node.val)\n                if node.left:\n                    next_queue.append(node.left)\n                if node.right:\n                    next_queue.append(node.right)\n            self.ans.appendleft(tmp[:])\n            queue = next_queue\n        return self.ans\n\n        ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}