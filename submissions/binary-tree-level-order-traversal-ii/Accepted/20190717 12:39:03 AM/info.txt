{"id":243824278,"lang":"python3","time":"1 year, 12 months","timestamp":1563291543,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/243824278/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"14.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def solve(self, queue, ans):\n        \n        next_queue = []\n        next_val_list =[]\n        \n        if len(queue)==0:\n            return ans[::-1]\n            \n        while len(queue)>0:\n            node = queue.pop(0) \n            if node.left is not None:\n                l = node.left\n                next_val_list.append(l.val)\n                next_queue.append(l)\n            if node.right is not None:\n                r = node.right\n                next_val_list.append(r.val)\n                next_queue.append(r)\n            \n            \n        if len(next_val_list) != 0:\n            ans.append(next_val_list)\n            \n        return self.solve(next_queue, ans)\n        \n    def levelOrderBottom(self, root: TreeNode) -> List[List[int]]:\n        queue = []\n        ans = []\n        if root is None:\n            return ans\n        \n        queue.append(root)\n        ans.append([root.val])\n                 \n        return self.solve(queue, ans)","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}