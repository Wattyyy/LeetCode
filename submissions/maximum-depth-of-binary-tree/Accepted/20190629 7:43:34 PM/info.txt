{"id":239477785,"lang":"python3","time":"2Â years","timestamp":1561805014,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/239477785/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"15.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x): \n#         self.val = x \n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def __init__(self):\n        self.dpts = []\n            \n    def maxDepth(self, root: TreeNode) -> int:\n        if root is None:\n            return 0\n        dpt = 1 \n        self.check_child(root, dpt)\n        return max(self.dpts)\n            \n    def check_child(self, node, dpt):\n        if node.left is None and node.right is None:\n            self.dpts.append(dpt)\n            return\n            \n        elif node.left is None:\n            self.check_child(node.right, dpt+1)\n\n        elif node.right is None:\n            self.check_child(node.left, dpt+1)\n            \n        else:\n            self.check_child(node.left, dpt+1)\n            self.check_child(node.right, dpt+1)","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}