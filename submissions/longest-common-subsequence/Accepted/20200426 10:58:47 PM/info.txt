{"id":330422922,"lang":"python3","time":"1 year, 2 months","timestamp":1587909527,"status_display":"Accepted","runtime":"476 ms","url":"/submissions/detail/330422922/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"22.2 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1, text2):\n        R, C = len(text1), len(text2)\n        if R == 0 or C == 0:\n            return 0\n        dp = [[0 for _ in range(C + 1)] for __ in range(R + 1)]\n        text1 = ' ' + text1\n        text2 = ' ' + text2\n        for r in range(1, R + 1):\n            for c in range(1, C + 1):\n                if text1[r] == text2[c]:\n                    dp[r][c] = max(dp[r][c], dp[r - 1][c - 1] + 1)\n                dp[r][c] = max(dp[r][c], dp[r - 1][c], dp[r][c - 1])\n        return dp[-1][-1]\n\n","compare_result":"1111111111111111111111111111111111111","title_slug":"longest-common-subsequence"}