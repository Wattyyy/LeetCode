{"id":301275035,"lang":"python3","time":"1 year, 5 months","timestamp":1581149899,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/301275035/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"N/A","code":"class Solution:\n    def longestCommonSubsequence(self, text1, text2):\n        C = len(text1)\n        R = len(text2)\n        dp = [[0 for _ in range(C+1)] for __ in range(R+1)]\n        text1 = \" \" + text1\n        text2 = \" \" + text2\n        for r in range(1, R+1):\n            for c in range(1, C+1):\n                if text2[r] == text1[c]:\n                    dp[r][c] = max(dp[r-1][c], dp[r][c-1]) + 1\n                else:\n                    dp[r][c] = max(dp[r-1][c], dp[r][c-1])\n        return dp[R][C]\n            \n        \n        ","compare_result":"1111111011100000000000000000000000000","title_slug":"longest-common-subsequence"}