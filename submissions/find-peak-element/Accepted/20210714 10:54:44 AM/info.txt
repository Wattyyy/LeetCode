{"id":522186587,"lang":"python3","time":"3 hours, 37 minutes","timestamp":1626227684,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/522186587/","is_pending":"Not Pending","title":"Find Peak Element","memory":"14.6 MB","code":"class Solution:\n    def binSearch(self, l, r, arr):\n        N = len(arr)\n        mid = (l + r) // 2\n        \n        # arr[mid-1] < arr[mid] > arr[mid+1]\n        if (mid == 0 or arr[mid-1] < arr[mid]) and (mid == N-1 or arr[mid] > arr[mid+1]):\n            return mid\n        \n        # arr[mid] < arr[mid+1]\n        elif mid < N and arr[mid] < arr[mid+1]:\n            return self.binSearch(mid+1, r, arr)\n        \n        # arr[mid-1] > arr[mid]\n        else:\n            return self.binSearch(l, mid-1, arr)\n        \n        \n    def findPeakElement(self, nums: List[int]) -> int:\n        res = self.binSearch(0, len(nums) - 1, nums)\n        return res\n        \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element"}