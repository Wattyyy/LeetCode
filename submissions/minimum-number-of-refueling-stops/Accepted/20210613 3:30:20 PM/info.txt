{"id":507187102,"lang":"python3","time":"1Â month","timestamp":1623565820,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/507187102/","is_pending":"Not Pending","title":"Minimum Number of Refueling Stops","memory":"14.5 MB","code":"from heapq import *\nclass Solution:\n    def minRefuelStops(self, T: int, F: int, S: List[List[int]]) -> int:\n        n, heap, ans = len(S), [], 0\n        for i in range(n+1):\n            dist = T if i == n else S[i][0]\n            while F < dist:\n                if len(heap) == 0: return -1\n                F -= heappop(heap)\n                ans += 1\n            if i < n: heappush(heap, -S[i][1])\n        return ans","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-refueling-stops"}