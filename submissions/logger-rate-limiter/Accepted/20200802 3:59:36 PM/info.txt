{"id":374830743,"lang":"python3","time":"11 months, 2 weeks","timestamp":1596351576,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/374830743/","is_pending":"Not Pending","title":"Logger Rate Limiter","memory":"19.8 MB","code":"from collections import defaultdict\n\nclass Logger:\n\n    def __init__(self):\n        self.m2t = defaultdict(int)\n\n    def shouldPrintMessage(self, timestamp, message):\n        if message not in self.m2t:\n            self.m2t[message] = timestamp\n            return True\n        else:\n            if (self.m2t[message] <= timestamp - 10):\n                self.m2t[message] = timestamp\n                return True\n            else:\n                return False\n            \n            return (self.m2t[message] < timestamp - 10)\n                \n        \n\n\n# Your Logger object will be instantiated and called as such:\n# obj = Logger()\n# param_1 = obj.shouldPrintMessage(timestamp,message)","compare_result":"11111111111111111111","title_slug":"logger-rate-limiter"}