{"id":470173213,"lang":"python3","time":"3 months, 3 weeks","timestamp":1616252701,"status_display":"Accepted","runtime":"344 ms","url":"/submissions/detail/470173213/","is_pending":"Not Pending","title":"Design Authentication Manager","memory":"15.6 MB","code":"from collections import defaultdict, Counter, deque\n\nclass AuthenticationManager:\n    def __init__(self, timeToLive: int):\n        self.min_heap = []\n        self.token_dict = defaultdict(int)\n        self.timeToLive = timeToLive\n\n    def generate(self, tokenId: str, currentTime: int) -> None:\n        self.token_dict[tokenId] = currentTime\n        \n    def renew(self, tokenId: str, currentTime: int) -> None:\n        if tokenId not in self.token_dict:\n            return\n        elif self.token_dict[tokenId] + self.timeToLive <= currentTime:\n            del self.token_dict[tokenId]\n            return\n        else:\n            self.token_dict[tokenId] = currentTime\n        \n    def countUnexpiredTokens(self, currentTime: int) -> int:\n        not_use = set()\n        for key in self.token_dict:\n            if self.token_dict[key] + self.timeToLive <= currentTime:\n                not_use.add(key)\n        for key in not_use:\n            del self.token_dict[key]\n        return len(self.token_dict)\n\n    \n        \n\n\n# Your AuthenticationManager object will be instantiated and called as such:\n# obj = AuthenticationManager(timeToLive)\n# obj.generate(tokenId,currentTime)\n# obj.renew(tokenId,currentTime)\n# param_3 = obj.countUnexpiredTokens(currentTime)","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-authentication-manager"}