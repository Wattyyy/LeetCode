{"id":294818433,"lang":"python3","time":"1 year, 5 months","timestamp":1579206938,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/294818433/","is_pending":"Not Pending","title":"Permutations","memory":"13 MB","code":"from copy import deepcopy\nclass Solution:\n    def permute(self, nums):\n        if not nums:\n            return [[]]\n    \n        self.res = []\n        def helper(nums, used, per):\n            if len(per)==len(nums):\n                self.res.append(per)\n                return\n            for num in nums:\n                if num not in used:\n                    tmp_used = deepcopy(used)\n                    tmp_per = deepcopy(per)\n                    tmp_used.add(num)\n                    tmp_per.append(num)\n                    helper(nums, tmp_used, tmp_per)\n        used = set()\n        per = []\n        helper(nums, used, per)\n        return self.res\n        \n        ","compare_result":"1111111111111111111111111","title_slug":"permutations"}