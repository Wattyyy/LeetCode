{"id":286312061,"lang":"python3","time":"1 year, 6 months","timestamp":1576474538,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/286312061/","is_pending":"Not Pending","title":"Permutations","memory":"12.9 MB","code":"class Solution:\n    def permute(self, nums):\n        if not nums:\n            return []\n        visited = set()\n        subset = []\n        res = []\n        def backtracking(visited, subset, nums):\n            if len(subset) == len(nums):\n                res.append(subset)\n            for i in range(len(nums)):\n                if i not in visited:\n                    visited.add(i)\n                    backtracking(visited, subset+[nums[i]], nums)\n                    visited.remove(i)\n        \n        backtracking(visited, subset, nums)\n        return res","compare_result":"1111111111111111111111111","title_slug":"permutations"}