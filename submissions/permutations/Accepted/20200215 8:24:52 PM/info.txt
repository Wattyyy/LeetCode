{"id":303455683,"lang":"python3","time":"1 year, 4 months","timestamp":1581765892,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/303455683/","is_pending":"Not Pending","title":"Permutations","memory":"12.8 MB","code":"class Solution:\n    def permute(self, nums):\n        N = len(nums)\n        output = []\n        def backtrack(first = 0):\n            if first == N:\n                output.append(nums[:])\n            for i in range(first, N):\n                nums[first], nums[i] = nums[i], nums[first]\n                backtrack(first + 1)\n                nums[first], nums[i] = nums[i], nums[first]\n        backtrack()\n        return output\n                \n        ","compare_result":"1111111111111111111111111","title_slug":"permutations"}