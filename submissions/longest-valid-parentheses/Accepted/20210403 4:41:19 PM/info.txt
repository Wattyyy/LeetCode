{"id":475812912,"lang":"python3","time":"3Â months, 1Â week","timestamp":1617435679,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/475812912/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"15.6 MB","code":"class Solution:\n    def longestValidParentheses(self, s: str) -> int:\n        st = []\n        idx_list = []\n        for idx, char in enumerate(s):\n            if 0 < len(st) and st[-1][0] == '(' and char == ')':\n                item = st.pop()\n                idx_list.append(item[1])\n                idx_list.append(idx)\n            else:\n                st.append((char, idx))\n        \n        idx_list = sorted(idx_list)\n        if len(idx_list) < 2:\n            return 0\n\n        ret = 1\n        tmp = 1\n        for i, idx in enumerate(idx_list):\n            if i == 0:\n                continue\n            if idx_list[i-1] + 1 == idx:\n                tmp += 1\n                ret = max(ret, tmp)\n            else:\n                tmp = 1\n        return ret\n            \n            \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses"}