{"id":328523242,"lang":"python3","time":"1 year, 2 months","timestamp":1587553236,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/328523242/","is_pending":"Not Pending","title":"Path Sum II","memory":"15 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def __init__(self):\n        self.ans = []\n\n    def backtrack(self, node, sum, val, ls):\n        if not node.left and not node.right:\n            if val == sum:\n                self.ans.append(ls[:])\n        if node.left:\n            val += node.left.val\n            ls.append(node.left.val)\n            self.backtrack(node.left, sum, val, ls)\n            val -= node.left.val\n            ls.pop()\n        if node.right:\n            val += node.right.val\n            ls.append(node.right.val)\n            self.backtrack(node.right, sum, val, ls)\n            val -= node.right.val\n            ls.pop()\n        \n\n    def pathSum(self, root, sum):\n        if not root: \n            return self.ans\n        self.backtrack(root, sum, root.val, [root.val])\n        return self.ans\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}