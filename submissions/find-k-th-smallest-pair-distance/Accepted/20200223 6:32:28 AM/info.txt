{"id":305844327,"lang":"python3","time":"1 year, 4 months","timestamp":1582407148,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/305844327/","is_pending":"Not Pending","title":"Find K-th Smallest Pair Distance","memory":"13.7 MB","code":"import bisect\nclass Solution:\n    def smallestDistancePair(self, nums, k):\n        nums = sorted(nums)\n        n = len(nums)\n        l = 0\n        r = nums[n - 1] - nums[0]\n\n        while l < r:\n            cnt = 0\n            m = l + (r - l) // 2\n\n            for i in range(n):\n                j = bisect.bisect_right(nums, nums[i] + m)\n                cnt += j - i - 1\n            \n            if (cnt < k):\n                l = m + 1\n            else:\n                r = m\n\n        return l","compare_result":"1111111111111111111","title_slug":"find-k-th-smallest-pair-distance"}