{"id":239481501,"lang":"python3","time":"2Â years","timestamp":1561807483,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/239481501/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"14.7 MB","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        H = len(grid)\n        W = len(grid[0])\n        dp = [[0 for _ in range(W)] for _ in range(H)]\n\n        for h in range(H):\n            for w in range(W):\n                if h>=1 and w>=1:\n                    dp[h][w] = min(dp[h-1][w]+grid[h][w], dp[h][w-1]+grid[h][w])\n                elif h>=1:\n                    dp[h][w] = dp[h-1][w]+grid[h][w]\n                elif w>=1:\n                    dp[h][w] = dp[h][w-1]+grid[h][w]\n                else:\n                    dp[h][w] = grid[h][w]\n\n\n        return dp[H-1][W-1]","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}