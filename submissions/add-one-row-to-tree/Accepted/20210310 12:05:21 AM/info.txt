{"id":465607258,"lang":"python3","time":"4Â months","timestamp":1615302321,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/465607258/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def addOneRow(self, root: TreeNode, v: int, d: int) -> TreeNode:\n        if d == 1:\n            new_node = TreeNode(v)\n            new_node.left = root\n            return new_node\n            \n        # BFS\n        roots = [root]\n        cur_depth = 2\n        while cur_depth < d:\n            next_roots = []\n            for node in roots:\n                if node.left:\n                    next_roots.append(node.left)\n                if node.right:\n                    next_roots.append(node.right)\n            cur_depth += 1\n            roots = next_roots\n        \n        \n        for node in roots:\n            # left\n            new_node = TreeNode(v)\n            if node.left:\n                new_node.left = node.left\n            node.left = new_node\n            \n            # right\n            new_node = TreeNode(v)\n            if node.right:\n                new_node.right = node.right\n            node.right = new_node\n        \n        return root\n            \n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree"}