{"id":301594285,"lang":"python3","time":"1 year, 5 months","timestamp":1581226389,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/301594285/","is_pending":"Not Pending","title":"Jump Game III","memory":"N/A","code":"from collections import defaultdict\nclass Solution:\n    def canReach(self, arr, start):\n        N = len(arr)\n        visited = [False for _ in range(N)]\n        zero_ids = []\n        for i in range(N):\n            if arr[i] == 0: zero_ids.append(i)\n        graph = defaultdict(list)\n        for i in range(N):\n            next_ids = [i+arr[i], i-arr[i]]\n            for idx in next_ids:\n                if 0<=idx and idx<N:\n                    graph[i].append(idx)\n        # bfs\n        queue = [start]\n        while queue:\n            idx = queue.pop(0)\n            visited[idx] = True\n            for next_id in graph[idx]:\n                if visited[next_id] == False:\n                    queue.append(next_id)\n        \n        for z_id in zero_ids:\n            if visited[z_id] == False:\n                return False\n        return True\n        ","compare_result":"11110101111011011111011111000101001001010110010000001","title_slug":"jump-game-iii"}