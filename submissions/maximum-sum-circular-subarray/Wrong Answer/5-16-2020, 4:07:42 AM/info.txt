{"id":339830967,"lang":"python3","time":"1 year, 1 month","timestamp":1589569662,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/339830967/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution(object):\n    def maxSubarraySumCircular(self, A):\n        N = len(A)\n        ans, cur = 0, 0\n        for x in A:\n            cur = x + max(cur, 0)\n            ans = max(ans, cur)\n        rightsums = [None] * N\n        rightsums[-1] = A[-1]\n        for i in range(N-2, -1, -1):\n            rightsums[i] = rightsums[i+1] + A[i]\n\n        maxright = [None] * N\n        maxright[-1] = rightsums[-1]\n        for i in range(N-2, -1, -1):\n            maxright[i] = max(maxright[i+1], rightsums[i])\n\n        leftsum = 0\n        for i in range(N-2):\n            leftsum += A[i]\n            ans = max(ans, leftsum + maxright[i+2])\n        return ans","compare_result":"1111011111011111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111101","title_slug":"maximum-sum-circular-subarray"}