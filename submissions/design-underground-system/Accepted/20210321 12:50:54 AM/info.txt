{"id":470193731,"lang":"python3","time":"3 months, 3 weeks","timestamp":1616255454,"status_display":"Accepted","runtime":"256 ms","url":"/submissions/detail/470193731/","is_pending":"Not Pending","title":"Design Underground System","memory":"23.9 MB","code":"from collections import defaultdict\n\nclass UndergroundSystem:\n\n    def __init__(self):\n        # (start, end) -> [total_time, count]\n        self.total_time_dict = defaultdict(list)\n        # id -> [(station, checkin_time), (station, checkout_time)]\n        self.in_out_dict = defaultdict(list)\n        \n    def checkIn(self, id: int, stationName: str, t: int) -> None:\n        self.in_out_dict[id].append((stationName, t))\n        \n    def checkOut(self, id: int, stationName: str, t: int) -> None:\n        self.in_out_dict[id].append((stationName, t))\n        start_station, end_station = self.in_out_dict[id][0][0], self.in_out_dict[id][1][0]\n        start_time, end_time = self.in_out_dict[id][0][1], self.in_out_dict[id][1][1]\n        self.total_time_dict[(start_station, end_station)].append(end_time - start_time)\n        del self.in_out_dict[id]\n\n    def getAverageTime(self, startStation: str, endStation: str) -> float:\n        return sum(self.total_time_dict[(startStation, endStation)]) / len(self.total_time_dict[(startStation, endStation)])\n        \n            \n\n\n# Your UndergroundSystem object will be instantiated and called as such:\n# obj = UndergroundSystem()\n# obj.checkIn(id,stationName,t)\n# obj.checkOut(id,stationName,t)\n# param_3 = obj.getAverageTime(startStation,endStation)","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system"}