{"id":316950107,"lang":"python3","time":"1 year, 3 months","timestamp":1585450637,"status_display":"Accepted","runtime":"500 ms","url":"/submissions/detail/316950107/","is_pending":"Not Pending","title":"Design Underground System","memory":"25.1 MB","code":"from collections import defaultdict\nclass UndergroundSystem:\n\n    def __init__(self):\n        self.id2_station_time = defaultdict(list)\n        self.st2_time_pop = defaultdict(list)\n        \n    def checkIn(self, id: int, stationName: str, t: int) -> None:\n        self.id2_station_time[id] = [stationName, t]\n\n    def checkOut(self, id: int, stationName: str, t: int) -> None:\n        start, start_time = self.id2_station_time[id][0], self.id2_station_time[id][1]\n        if (start, stationName) in self.st2_time_pop:\n            old_time, old_pop = self.st2_time_pop[(start, stationName)][0], self.st2_time_pop[(start, stationName)][1]\n            self.st2_time_pop[(start, stationName)] = [old_time + (t - start_time), old_pop + 1]\n        else:\n            self.st2_time_pop[(start, stationName)] = [t - start_time, 1]\n\n    def getAverageTime(self, startStation: str, endStation: str) -> float:\n        time = self.st2_time_pop[(startStation, endStation)][0] \n        pop = self.st2_time_pop[(startStation, endStation)][1] \n        return time / pop\n\n\n# Your UndergroundSystem object will be instantiated and called as such:\n# obj = UndergroundSystem()\n# obj.checkIn(id,stationName,t)\n# obj.checkOut(id,stationName,t)\n# param_3 = obj.getAverageTime(startStation,endStation)","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system"}