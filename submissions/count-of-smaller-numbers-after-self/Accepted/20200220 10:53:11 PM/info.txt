{"id":305159831,"lang":"python3","time":"1 year, 4 months","timestamp":1582206791,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/305159831/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"16 MB","code":"class BSTNode:\n    def __init__(self, val):\n        self.val = val\n        self.duplicate = 1\n        self.left_nodes = 0\n        self.left = None\n        self.right = None\n\nclass Solution:\n    def countSmaller(self, nums):\n        if not nums:\n            return []\n        if len(nums) == 1:\n            return [0]\n        \n        N = len(nums)\n        ans = [0] * N\n        root = BSTNode(nums[-1])\n        for i in reversed(range(N-1)):\n            count = 0\n            cur = root\n            while True:\n                if cur.val < nums[i]:\n                    count += cur.left_nodes + cur.duplicate\n                    if cur.right:\n                        cur = cur.right\n                    else:\n                        cur.right = BSTNode(nums[i])\n                        break\n\n                elif cur.val == nums[i]:\n                    cur.duplicate += 1\n                    count += cur.left_nodes\n                    break\n\n                else:\n                    cur.left_nodes += 1\n                    if cur.left:\n                        cur = cur.left\n                    else:\n                        cur.left = BSTNode(nums[i])\n                        break\n            \n            ans[i] = count        \n        return ans\n            \n        ","compare_result":"1111111111111111","title_slug":"count-of-smaller-numbers-after-self"}