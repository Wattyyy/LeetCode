{"id":344310957,"lang":"python3","time":"1 year, 1 month","timestamp":1590382419,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/344310957/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"19.2 MB","code":"from collections import deque\n\nclass BST:\n    def __init__(self, val):\n        self.val = val\n        self.l = None\n        self.r = None\n        self.l_cnt = 0\n        self.cnt = 1\n        \nclass Solution:\n    def countSmaller(self, nums):\n        if not nums:\n            return []\n        nums = nums[::-1]\n        ans = [0]\n        root = BST(nums[0])\n        for i, v in enumerate(nums):\n            if i == 0:\n                continue\n            res = 0\n            cur = root\n            while True:\n                if cur == v:\n                    cur.cnt += 1\n                    res += cur.l_cnt\n                    ans.append(res)\n                    break\n                elif cur.val < v:\n                    res += cur.l_cnt + cur.cnt\n                    if cur.r:\n                        cur = cur.r\n                    else:\n                        cur.r = BST(v)\n                        ans.append(res)\n                        break\n                else:\n                    cur.l_cnt += 1\n                    if cur.l:\n                        cur = cur.l\n                    else:\n                        cur.l = BST(v)\n                        ans.append(res)\n                        break\n\n        return ans[::-1]\n                        \n                \n\n        ","compare_result":"1111111111111111","title_slug":"count-of-smaller-numbers-after-self"}