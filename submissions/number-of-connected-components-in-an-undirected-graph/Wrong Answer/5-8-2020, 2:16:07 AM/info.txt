{"id":335830623,"lang":"python3","time":"1 year, 2 months","timestamp":1588871767,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/335830623/","is_pending":"Not Pending","title":"Number of Connected Components in an Undirected Graph","memory":"N/A","code":"class UnionFind:\n    def __init__(self, N):\n        self.node2par = {i:i for i in range(N)}\n        self.count = N\n        self.rank = [0] * N\n        \n    def find_par(self, x):\n        if self.node2par[x] == x:\n            return x\n        res = self.find_par(self.node2par[x])\n        return res\n    \n    def unite(self, x, y):\n        x, y = self.node2par[x], self.node2par[y]\n        if x == y:\n            return\n        if self.rank[x] == self.rank[y]:\n            self.node2par[x] = y\n            self.rank[y] += 1\n        elif self.rank[x] < self.rank[y]:\n            self.node2par[x] = y\n        else:\n            self.node2par[y] = x\n        self.count -= 1\n\nclass Solution:\n    def countComponents(self, n, edges):\n        uf = UnionFind(n)\n        for u, v in edges:\n            uf.unite(u, v)\n        return uf.count\n        ","compare_result":"111111111111111111111111111111111110000000011","title_slug":"number-of-connected-components-in-an-undirected-graph"}