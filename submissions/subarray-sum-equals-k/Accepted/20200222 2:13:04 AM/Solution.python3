// https://leetcode.com/problems/subarray-sum-equals-k

# https://leetcode.com/problems/subarray-sum-equals-k/

from collections import defaultdict
from bisect import bisect_right
class Solution:
    def subarraySum(self, nums, k):
        N = len(nums)
        ans = 0
        cum_sum = [0] * len(nums)
        val2idx = defaultdict(list)
        for i in range(N):
            if i == 0: cum_sum[0] = nums[0]
            else: cum_sum[i] += cum_sum[i-1] + nums[i]
        
        for i in range(N):
            val = k - cum_sum[i]
            val2idx[val].append(i)
            if val == 0:
                ans += 1
        
        for i in range(N):
            if -cum_sum[i] in val2idx:
                ids = val2idx[-cum_sum[i]]
                ans += len(ids) - bisect_right(ids, i)

        return ans
            
            
            
        