{"id":383616357,"lang":"python3","time":"10 months, 3 weeks","timestamp":1597908840,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/383616357/","is_pending":"Not Pending","title":"Reorder List","memory":"23 MB","code":"# Definition for singly-linked list.\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\nfrom collections import defaultdict\nclass Solution:\n    def reorderList(self, head: ListNode) -> None:\n        \"\"\"\n        Do not return anything, modify head in-place instead.\n        \"\"\"\n        if not head or not head.next:\n            return\n        \n        idx2node = defaultdict(ListNode)\n        idx = 0\n        cur = head\n        while cur:\n            idx2node[idx] = cur\n            idx += 1\n            cur = cur.next\n        \n        l, r = 0, len(idx2node) - 1\n        while l < r:\n            nx_node = idx2node[l].next\n            idx2node[l].next = idx2node[r]\n            idx2node[r].next = idx2node[l+1]\n            l += 1\n            r -= 1\n        \n        last_idx = len(idx2node) // 2\n        idx2node[last_idx].next = None\n        return        ","compare_result":"1111111111111","title_slug":"reorder-list"}