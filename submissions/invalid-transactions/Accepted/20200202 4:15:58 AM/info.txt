{"id":299308601,"lang":"python3","time":"1 year, 5 months","timestamp":1580584558,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/299308601/","is_pending":"Not Pending","title":"Invalid Transactions","memory":"13.1 MB","code":"from collections import defaultdict\n\nclass Solution(object):\n    def invalidTransactions(self, transactions):\n        if not transactions:\n            return []\n        # name -> [[time, amount, city, is_invalid], [time, amount, city, is_invalid]...]\n        record = defaultdict(list)\n        for item in transactions:\n            name, time, amount, city = item.split(\",\")\n            tmp_list = [time, amount, city, False]\n            if int(amount) >= 1000:\n                tmp_list[-1] = True\n            for item in record[name]:\n                if (abs(int(item[0]) - int(time)) <= 60) and (city != item[2]):\n                    item[-1] = True\n                    tmp_list[-1] = True\n            record[name].append(tmp_list)\n\n        ans = []\n        for name in record.keys():\n            for item in record[name]:\n                if item[-1]:\n                    transaction = [name] + item[:-1]\n                    string = \",\".join(transaction)\n                    ans.append(string)\n        return ans       ","compare_result":"111111111111111111111111111111111","title_slug":"invalid-transactions"}