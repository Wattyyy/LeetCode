{"id":343828555,"lang":"python3","time":"1 year, 1 month","timestamp":1590293063,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/343828555/","is_pending":"Not Pending","title":"Interval List Intersections","memory":"14.2 MB","code":"class Solution:\n    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:\n        ans = []\n        i = j = 0\n\n        while i < len(A) and j < len(B):\n            lo = max(A[i][0], B[j][0])\n            hi = min(A[i][1], B[j][1])\n            if lo <= hi:\n                ans.append([lo, hi])\n\n            if A[i][1] < B[j][1]:\n                i += 1\n            else:\n                j += 1\n\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interval-list-intersections"}