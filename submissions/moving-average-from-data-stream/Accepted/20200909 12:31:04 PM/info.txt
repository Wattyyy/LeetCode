{"id":393092134,"lang":"python3","time":"10 months, 1 week","timestamp":1599622264,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/393092134/","is_pending":"Not Pending","title":"Moving Average from Data Stream","memory":"16.9 MB","code":"from collections import deque\nclass MovingAverage:\n    def __init__(self, size: int):\n        self.cum = 0\n        self.size = size\n        self.queue = deque()\n\n    def next(self, val: int) -> float:\n        if len(self.queue) == self.size:\n            self.cum -= self.queue[0]\n            self.queue.popleft()\n            self.queue.append(val)\n            self.cum += self.queue[-1]\n            return self.cum / len(self.queue)\n        else:\n            self.queue.append(val)\n            self.cum += self.queue[-1]\n            return self.cum / len(self.queue)\n        \n\n            \n        \n\n\n# Your MovingAverage object will be instantiated and called as such:\n# obj = MovingAverage(size)\n# param_1 = obj.next(val)","compare_result":"111111111111","title_slug":"moving-average-from-data-stream"}