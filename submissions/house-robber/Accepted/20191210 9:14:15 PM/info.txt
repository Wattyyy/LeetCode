{"id":285014948,"lang":"python3","time":"1 year, 7 months","timestamp":1575980055,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/285014948/","is_pending":"Not Pending","title":"House Robber","memory":"12.8 MB","code":"class Solution:    \n    def rob(self, nums):\n        \n        N = len(nums)\n        if N==0:\n            return 0\n        if N==1:\n            return nums[0]\n        if N==2:\n            return max(nums[0], nums[1])\n        \n        # dp[i] contains maximum value given nums[0:i]   \n        dp = [0 for _ in range(N)]\n        dp[0] = nums[0]\n        dp[1] = max(nums[0], nums[1])\n        \n        for i in range(2, N):\n            dp[i] = max(dp[i-2] + nums[i], dp[i-1])\n        \n        return dp[N-1]\n                \n            \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber"}