{"id":353939682,"lang":"python3","time":"1Â year","timestamp":1592212277,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/353939682/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"15.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution: \n    def searchBST(self, root: TreeNode, val: int) -> TreeNode:\n        if not root:\n            return\n        if root.val == val:\n            return root\n        if root.val < val:\n            if not root.right:\n                return\n            else:\n                return self.searchBST(root.right, val)\n        else:\n            if not root.left:\n                return\n            else:\n                return self.searchBST(root.left, val)\n        \n        ","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}