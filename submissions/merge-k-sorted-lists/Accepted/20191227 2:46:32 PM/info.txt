{"id":288888043,"lang":"python3","time":"1 year, 6 months","timestamp":1577425592,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/288888043/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"15.6 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nfrom heapq import *\nclass Solution:\n    def mergeKLists(self, lists):\n        if not lists:\n            return None\n        if len(lists)==1:\n            return lists[0]\n        \n        head = ListNode(0)\n        tail = head\n        h = []\n        for l in lists:\n            if l is not None:\n                heappush(h, (l.val, id(l), l))\n    \n        while h:\n            val, _, node = heappop(h)\n            if node.next is not None:\n                heappush(h, (node.next.val, id(node.next), node.next))\n            tail.next = node\n            tail = node\n            \n        return head.next\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}