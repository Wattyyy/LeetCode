// https://leetcode.com/problems/merge-k-sorted-lists

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def merge(self, l1, l2):
        if not l1 and not l2:
            return None
        elif not l1:
            return l2
        elif not l2:
            return l1
        else:
            if l1.val < l2.val:
                nx = l1.next
                l1.next = self.merge(nx, l2)
                return l1
            else:
                nx = l2.next
                l2.next = self.merge(l1, nx)
                return l2
        
    def mergeKLists(self, lists):
        if not lists:
            return None
        if len(lists)==1:
            return lists[0]
        node = self.merge(lists[0], lists[1])
        for i in range(2, len(lists)):
            node = self.merge(node, lists[i])
        return node