{"id":288872531,"lang":"python3","time":"1 year, 6 months","timestamp":1577421285,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/288872531/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def merge(self, l1, l2):\n        if not l1 and not l2:\n            return None\n        elif not l1:\n            return l2\n        elif not l2:\n            return l1\n        else:\n            if l1.val < l2.val:\n                nx = l1.next\n                l1.next = self.merge(nx, l2)\n                return l1\n            else:\n                nx = l2.next\n                l2.next = self.merge(l1, nx)\n                return l2\n        \n    def mergeKLists(self, lists):\n        if not lists:\n            return None\n        if len(lists)==1:\n            return lists[0]\n        node = self.merge(lists[0], lists[1])\n        for i in range(2, len(lists)):\n            node = self.merge(node, lists[i])\n        return node","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"merge-k-sorted-lists"}