{"id":254362000,"lang":"python3","time":"1 year, 10 months","timestamp":1566625007,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/254362000/","is_pending":"Not Pending","title":"Network Delay Time","memory":"N/A","code":"class Solution:\n    def networkDelayTime(self, times, N, K):\n        graph = dict({v:[] for v in range(1, N+1)})\n        time_list = [[0 for _ in range(N+1)] for __ in range(N+1)]\n        for item in times:\n            u, v, w = item[0], item[1], item[2]\n            graph[u].append(v)\n            graph[v].append(u)\n            time_list[u][v], time_list[v][u] = w, w\n        \n        INF = float(\"inf\")\n        dp = dict({i:INF for i in range(1, N+1)})        \n        dp[K] = 0\n                   \n        while True:\n            updated = False\n            for v in range(1, N+1):\n                old_val = dp[v]\n                neighbors = graph[v]\n                for nv in neighbors:\n                    dp[v] = min(dp[v], dp[nv]+time_list[nv][v])\n                if old_val!=dp[v]:\n                    updated = True\n            if not updated:\n                break\n\n        max_val = 0\n        for v in range(1, N+1):\n            max_val = max(max_val, dp[v])\n        if max_val==INF:\n            return -1\n        else:\n            return max_val\n        ","compare_result":"110111101110000000010000000000010010000000000000000","title_slug":"network-delay-time"}