{"id":254371088,"lang":"python3","time":"1 year, 10 months","timestamp":1566628063,"status_display":"Accepted","runtime":"628 ms","url":"/submissions/detail/254371088/","is_pending":"Not Pending","title":"Network Delay Time","memory":"15.5 MB","code":"class Solution:\n    def networkDelayTime(self, times, N, K):\n        graph = dict({v:[] for v in range(1, N+1)})\n        time_list = [[0 for _ in range(N+1)] for __ in range(N+1)]\n        for item in times:\n            u, v, w = item[0], item[1], item[2]\n            graph[u].append(v)\n            time_list[u][v] = w\n        \n        INF = float(\"inf\")\n        dp = dict({i:INF for i in range(1, N+1)})        \n        dp[K] = 0\n                   \n        while True:\n            updated = False\n            for v in range(1, N+1):\n                neighbors = graph[v]\n                for nv in neighbors:\n                    old_val = dp[nv]\n                    dp[nv] = min(dp[nv], dp[v]+time_list[v][nv])\n                    if old_val!=dp[nv]:\n                        updated = True\n            if not updated:\n                break\n    \n        max_val = 0\n        for v in range(1, N+1):\n            max_val = max(max_val, dp[v])\n        if max_val==INF:\n            return -1\n        else:\n            return max_val","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time"}