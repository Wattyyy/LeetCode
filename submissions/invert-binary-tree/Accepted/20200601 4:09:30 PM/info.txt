{"id":347473210,"lang":"python3","time":"1 year, 1 month","timestamp":1590995370,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/347473210/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def swap(self, node):\n        node.left, node.right = node.right, node.left\n        if node.left:\n            self.swap(node.left)\n        if node.right:\n            self.swap(node.right)\n\n    def invertTree(self, root):\n        if not root:\n            return \n        self.swap(root)\n        return root\n        \n\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}