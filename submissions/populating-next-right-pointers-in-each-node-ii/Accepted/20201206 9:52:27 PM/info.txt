{"id":427807690,"lang":"python3","time":"7 months, 1 week","timestamp":1607259147,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/427807690/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"15.4 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.next = next\n\"\"\"\n\nfrom collections import deque\nclass Solution:\n    def connect(self, root: 'Node') -> 'Node':\n        if not root:\n            return None\n        queue = deque([root])\n        while queue:\n            tmp = deque([])\n            for node in queue:\n                if node.left:\n                    tmp.append(node.left)\n                if node.right:\n                    tmp.append(node.right)\n            for i, node in enumerate(tmp):\n                if i == len(tmp) - 1:\n                    break\n                node.next = tmp[i + 1]\n            queue = tmp\n        return root\n\n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"populating-next-right-pointers-in-each-node-ii"}