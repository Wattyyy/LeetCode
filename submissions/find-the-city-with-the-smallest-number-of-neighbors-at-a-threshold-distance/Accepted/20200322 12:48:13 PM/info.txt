{"id":314712491,"lang":"python3","time":"1 year, 3 months","timestamp":1584848893,"status_display":"Accepted","runtime":"628 ms","url":"/submissions/detail/314712491/","is_pending":"Not Pending","title":"Find the City With the Smallest Number of Neighbors at a Threshold Distance","memory":"13.9 MB","code":"from collections import defaultdict\nimport heapq\n\nclass Solution:\n    def findTheCity(self, n, edges, distanceThreshold):\n        graph = defaultdict(list)\n        for u, v, w in edges:\n            graph[u].append((v, w))\n            graph[v].append((u, w))\n        \n        # (node, reachable cities)\n        ans = (float('inf'), float('inf'))\n        for i in range(n):\n            dist = [float('inf')] * n\n            dist[i] = 0\n            pq = [(0, i)]\n            while pq:\n                _, node = heapq.heappop(pq)\n                for next_node, weight in graph[node]:\n                    tmp = dist[node] + weight\n                    if tmp < dist[next_node]:\n                        dist[next_node] = tmp\n                        heapq.heappush(pq, (tmp, next_node))\n                        \n            val = sum([d <= distanceThreshold for d in dist])\n            if val <= ans[1]:\n                ans = (i, val)\n        \n        return ans[0]\n                ","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance"}