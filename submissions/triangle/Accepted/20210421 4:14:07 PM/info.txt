{"id":483346273,"lang":"python3","time":"2 months, 3 weeks","timestamp":1618989247,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/483346273/","is_pending":"Not Pending","title":"Triangle","memory":"15.1 MB","code":"from typing import List\nclass Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        dp = [triangle[0][0]]\n        for row, ls in enumerate(triangle):\n            if row == 0:\n                continue\n            new = [float('inf')] * (row + 1)\n            for i, num in enumerate(ls):\n                if i == 0:\n                    new[i] = min(new[i], dp[i] + num)\n                elif i == len(ls) - 1:\n                    new[i] = min(new[i], dp[i-1] + num)\n                else:\n                    new[i] = min(new[i], dp[i] + num, dp[i-1] + num)\n            dp = new\n        return min(dp)\n\n        ","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle"}