{"id":317834868,"lang":"python3","time":"1 year, 3 months","timestamp":1585665843,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/317834868/","is_pending":"Not Pending","title":"Triangle","memory":"13.9 MB","code":"class Solution:\n    def minimumTotal(self, triangle):\n        if triangle == [[]]:\n            return 0\n        INF = float('inf')\n        level = len(triangle)\n        dp = []\n        for item in triangle:\n            length = len(item)\n            tmp = [INF for _ in range(length)]\n            dp.append(tmp)\n        dp[0][0] = triangle[0][0]\n        for i in range(1, len(triangle)):\n            current = triangle[i]\n            for j in range(len(current)):\n                if 0 <= j - 1 and j - 1 < i:\n                    dp[i][j] = min(dp[i][j], dp[i-1][j-1] + current[j])\n                if 0 <= j and j < i:\n                    dp[i][j] = min(dp[i][j], dp[i-1][j] + current[j])\n    \n        return min(dp[-1])\n\n        ","compare_result":"1111111111111111111111111111111111111111111","title_slug":"triangle"}