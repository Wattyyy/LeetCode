{"id":327614040,"lang":"python3","time":"1 year, 2 months","timestamp":1587374879,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/327614040/","is_pending":"Not Pending","title":"Construct Binary Search Tree from Preorder Traversal","memory":"13.6 MB","code":"# Definition for a binary tree node.\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n\nclass Solution:\n    def bstFromPreorder(self, preorder):\n        root = TreeNode(preorder[0])\n        for v in preorder[1:]:\n            cur = root\n            while True:\n                if cur.val < v and not cur.right:\n                    cur.right = TreeNode(v)\n                    break\n                elif cur.val < v and cur.right:\n                    cur = cur.right\n                elif v < cur.val and not cur.left:\n                    cur.left = TreeNode(v)\n                    break\n                else:\n                    cur = cur.left\n        return root\n                \n                    \n            \n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-search-tree-from-preorder-traversal"}