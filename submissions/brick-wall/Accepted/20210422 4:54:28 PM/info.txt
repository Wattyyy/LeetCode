{"id":483767881,"lang":"python3","time":"2 months, 3 weeks","timestamp":1619078068,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/483767881/","is_pending":"Not Pending","title":"Brick Wall","memory":"19.2 MB","code":"from collections import Counter\nfrom itertools import accumulate\n\nclass Solution:\n    def leastBricks(self, wall: List[List[int]]) -> int:\n        cnt = Counter()\n        for row in wall:\n            cum_arr = list(accumulate(row))\n            for i, cum_sum in enumerate(cum_arr):\n                if i == len(cum_arr) - 1:\n                    break\n                cnt[cum_sum] += 1\n                \n        if len(cnt) == 0:\n            return len(wall)\n        return len(wall) - max(cnt.values())\n\n            \n                    \n                \n            \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"brick-wall"}