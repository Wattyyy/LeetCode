{"id":285214333,"lang":"python3","time":"1 year, 7 months","timestamp":1576050032,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/285214333/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"16.5 MB","code":"class NumArray:\n    \n    def __init__(self, nums):\n        if len(nums)>0:\n            self.length = len(nums)\n            self.tree = [0 for _ in range(2*self.length)]\n            \n            # build tree \n            n = self.length\n            i = n\n            j = 0\n            while i<2*n:\n                self.tree[i] = nums[j]\n                i += 1\n                j += 1\n            for i in range(n-1, 0, -1):\n                self.tree[i] = self.tree[i*2] + self.tree[i*2 + 1]\n\n    def update(self, pos, val):\n        # 0 <= pos < n\n        n = self.length\n        pos += n\n        self.tree[pos] = val\n        while (pos > 0):\n            left = pos\n            right = pos\n            if pos%2==0:\n                right = pos + 1\n            else:\n                left = pos - 1\n            self.tree[pos//2] = self.tree[left] + self.tree[right]\n            pos //= 2\n        \n    def sumRange(self, l, r):\n        if l > r:\n            l, r = r, l\n        # 0 <= l,r < n\n        n = self.length\n        l += n\n        r += n\n        res = 0\n        while l<=r:\n            if l%2==1:\n                res += self.tree[l]\n                l += 1\n            if r%2==0:\n                res += self.tree[r]\n                r -= 1\n            l //= 2\n            r //= 2\n        return res\n       ","compare_result":"1111111111","title_slug":"range-sum-query-mutable"}