{"id":308503557,"lang":"python3","time":"1 year, 4 months","timestamp":1583119689,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/308503557/","is_pending":"Not Pending","title":"Reorganize String","memory":"12.8 MB","code":"from math import ceil\nfrom collections import Counter\nimport heapq\nclass Solution:\n    def reorganizeString(self, S):\n        Length = len(S)\n        cnt = Counter(S)\n        capacity = ceil(Length / 2)\n        max_heap = [(-value, key) for key, value in cnt.items()]\n        max_freq = cnt.most_common(1)[0][1]\n        if capacity < max_freq:\n            return \"\"\n        \n        heapq.heapify(max_heap)\n        prev_v, prev_k = heapq.heappop(max_heap)\n        ans = [prev_k]\n        while len(ans) < Length:\n            v, k = heapq.heappop(max_heap)\n            ans.append(k)\n            if prev_v + 1 <= 0:\n                heapq.heappush(max_heap, (prev_v + 1, prev_k))\n            prev_v, prev_k = v, k\n        \n        return \"\".join(ans)","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reorganize-string"}