{"id":485817089,"lang":"python3","time":"2Â months, 2Â weeks","timestamp":1619520577,"status_display":"Accepted","runtime":"440 ms","url":"/submissions/detail/485817089/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"14.4 MB","code":"from typing import List\nclass Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        ans = []\n        for i in range(2 ** (n * 2)):\n            num = i\n            st, cand = [], []\n            for _ in range(2 * n):\n                tmp = ''\n                if num & 1:\n                    tmp = '('\n                    cand.append('(')\n                else:\n                    tmp = ')'\n                    cand.append(')')\n                if 0 < len(st) and (st[-1] == '(' and tmp == ')'):\n                    st.pop()\n                else:\n                    st.append(tmp)\n                num = num >> 1\n            # print(cand)\n            if len(st) == 0:\n                ans.append(''.join(cand))\n        return ans\n\n","compare_result":"11111111","title_slug":"generate-parentheses"}