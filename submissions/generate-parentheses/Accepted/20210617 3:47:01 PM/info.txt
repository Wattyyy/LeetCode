{"id":509129048,"lang":"python3","time":"3Â weeks, 5Â days","timestamp":1623912421,"status_display":"Accepted","runtime":"424 ms","url":"/submissions/detail/509129048/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"14.6 MB","code":"from typing import List\n\nclass Solution:\n    def is_valid(self, string_list: List) -> bool:\n        stack = []\n        for char in string_list:\n            if len(stack) == 0:\n                stack.append(char)\n            elif stack[-1] == '(' and char == ')':\n                stack.pop()\n            else:\n                stack.append(char)\n        return len(stack) == 0\n\n    def generateParenthesis(self, n: int) -> List[str]:\n        N = (n * 2) \n        ans = []\n        for i in range(2 ** N):\n            num = i\n            ls = []\n            for _ in range(N):\n                if num & 1:\n                    ls.append('(')\n                else:\n                    ls.append(')')\n                num = num >> 1\n            if self.is_valid(ls):\n                ans.append(''.join(ls))\n        return ans\n        \n        ","compare_result":"11111111","title_slug":"generate-parentheses"}