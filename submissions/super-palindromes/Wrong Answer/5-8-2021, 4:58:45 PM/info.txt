{"id":490320938,"lang":"python3","time":"2Â months","timestamp":1620460725,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/490320938/","is_pending":"Not Pending","title":"Super Palindromes","memory":"N/A","code":"class Solution:\n    def backtrack(self, i, end):\n        if i == end:\n            val = int(''.join(self.char_list))\n            if self.check(val):\n                self.ans += 1\n            return\n        elif i == 0:\n            for j in range(1, 10):\n                self.char_list[i] = str(j)\n                self.char_list[-1-i] = str(j)\n                self.backtrack(i+1, end)\n        else:\n            for j in range(1, 10):\n                self.char_list[i] = str(j)\n                self.char_list[-1-i] = str(j)\n                self.backtrack(i+1, end)\n            \n\n    def check(self, val):\n        # is in range\n        sq = pow(val, 2)\n        if (self.right < sq) or (sq < self.left):\n            return False\n\n        # is palindrome\n        str_sq = str(sq)\n        for i in range( len(str_sq) // 2 ):\n            if str_sq[i] != str_sq[-1+i]:\n                return False\n        return True\n        \n        \n    def superpalindromesInRange(self, left: str, right: str) -> int:\n        self.ans = 0\n        self.left = int(left)\n        self.right = int(right)\n        for i in range(1, 10):\n            self.char_list = ['0'] * i\n            if i % 2 == 1:\n                end = i // 2 + 1\n            else:\n                end = i // 2\n            self.backtrack(0, end)\n        return self.ans\n","compare_result":"1111111111110111100000000000000000000000000000000","title_slug":"super-palindromes"}