{"id":416261996,"lang":"python3","time":"8 months, 1 week","timestamp":1604386022,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/416261996/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"17 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nfrom bisect import bisect_left\nclass Solution:\n    def insertionSortList(self, head):\n        if not head:\n            return None\n        arr = []\n        cur = head\n        while cur:\n            val = cur.val\n            idx = bisect_left(arr, val)\n            arr.insert(idx, val)\n            cur = cur.next\n        res = ListNode(arr[0])\n        cur = res\n        for i, v in enumerate(arr):\n            if i == 0:\n                continue\n            cur.next = ListNode(v)\n            cur = cur.next\n        return res\n            \n        \n        \n        \n        ","compare_result":"1111111111111111111111","title_slug":"insertion-sort-list"}