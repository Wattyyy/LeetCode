{"id":467632542,"lang":"python3","time":"4Â months","timestamp":1615719038,"status_display":"Accepted","runtime":"1192 ms","url":"/submissions/detail/467632542/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"48.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def swapNodes(self, head: ListNode, k: int) -> ListNode:\n        length = 0\n        cur_node = head\n        while cur_node:\n            length += 1\n            cur_node = cur_node.next\n        \n        cnt = 0\n        cur_node = head\n        while cur_node:\n            cnt += 1\n            if cnt == k:\n                val1 = cur_node.val\n            if cnt == length + 1 - k:\n                val2 = cur_node.val\n            cur_node = cur_node.next\n        \n        cnt = 0\n        cur_node = head\n        while cur_node:\n            cnt += 1\n            if cnt == k:\n                cur_node.val = val2\n            if cnt == length + 1 - k:\n                cur_node.val = val1\n            cur_node = cur_node.next\n        \n        return head\n        \n        \n        \n            \n            \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list"}