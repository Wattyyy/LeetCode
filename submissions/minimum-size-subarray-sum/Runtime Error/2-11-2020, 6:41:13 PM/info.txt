{"id":302299677,"lang":"python3","time":"1 year, 5 months","timestamp":1581414073,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/302299677/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution:\n    def minSubArrayLen(self, s, nums):\n        lp, rp = 0, 0\n        ans = len(nums) + 1\n        cur_sum = nums[rp]\n        while lp <= rp:\n            if cur_sum < s:\n                if rp < len(nums) - 1:\n                    rp += 1\n                    cur_sum += nums[rp]\n                else:\n                    break\n            else:\n                ans = min(ans, rp-lp+1)\n                cur_sum -= nums[lp]\n                lp += 1\n        \n        if ans == len(nums) + 1:\n            return 0\n        else:\n            return ans","compare_result":"100000000000000","title_slug":"minimum-size-subarray-sum"}