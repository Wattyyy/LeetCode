{"id":308875039,"lang":"python3","time":"1 year, 4 months","timestamp":1583215841,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/308875039/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"N/A","code":"class Solution:\n    def largestRectangleArea(self, heights):\n        heights = [0] + heights\n        idx_log = [0]\n        ans = 0\n        offset = 0\n        L = len(heights)\n        for i in range(1, L):\n            while heights[idx_log[-1]] > heights[i]:\n                if len(idx_log) == 2:\n                    idx = idx_log.pop(-1)\n                    ans = max(ans,(idx - idx_log[0]) * heights[idx])\n                else:\n                    idx = idx_log.pop(-1)\n                    ans = max(ans, (i - idx) * heights[idx])\n            idx_log.append(i)\n            if (len(idx_log) == 2) and (heights[idx_log[0]] == heights[idx_log[1]] == 0):\n                idx_log.pop(0)\n                offset = idx_log[-1]\n                \n        while 2 < len(idx_log):\n            idx = idx_log.pop(-1)\n            ans = max(ans, (L - idx) * heights[idx])\n        ans = max(ans, heights[idx_log[-1]] * (L - 1 - offset)) \n        \n        return ans\n            ","compare_result":"111111111111111111111111111110110100111111001111111110011000110000101100001010000000100010100011","title_slug":"largest-rectangle-in-histogram"}