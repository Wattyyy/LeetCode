// https://leetcode.com/problems/max-dot-product-of-two-subsequences

class Solution:
    def maxDotProduct(self, nums1, nums2):
        ans = 0
        nums1 = [0] + nums1
        nums2 = [0] + nums2
        R, C = len(nums1), len(nums2) 
        dp = [[0 for _ in range(C)] for __ in range(R)]
        
        ans = -float('inf')
        for i in range(1, R):
            for j in range(1, C):
                if i == 1 and j == 1:
                    dp[i][j] = nums1[i] * nums2[j]
                elif i == 1:
                    dp[i][j] = max(nums1[i] * nums2[j], dp[i][j-1])
                else:
                    if j == 1:
                        dp[i][j] = max(dp[i-1][j-1] + nums1[i] * nums2[j], dp[i-1][j])
                    else:
                        dp[i][j] = max(dp[i-1][j-1] + nums1[i] * nums2[j], dp[i-1][j], dp[i][j-1])
                ans = max(ans, dp[i][j])
        return ans
