{"id":294672499,"lang":"python3","time":"1 year, 5 months","timestamp":1579157072,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/294672499/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"12.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root):\n        def helper(l_node, r_node):\n            if (not l_node) and (not r_node):\n                return True\n            if (not l_node) or (not r_node):\n                return False\n            return (l_node.val == r_node.val) and helper(l_node.right, r_node.left) and helper(l_node.left, r_node.right)\n        \n        res = helper(root, root)\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}