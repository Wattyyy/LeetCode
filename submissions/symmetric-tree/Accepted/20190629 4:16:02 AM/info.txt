{"id":239347606,"lang":"python3","time":"2Â years","timestamp":1561749362,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/239347606/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"13.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if root is None:\n            return True\n        return self.check(root.left, root.right)\n        \n    def check(self, left, right):\n        if left is None and right is None:\n            return True\n        if left is None or right is None:\n            return False\n        if left.val != right.val:\n            return False\n        a = self.check(left.left, right.right)\n        b = self.check(left.right, right.left)\n        return (a and b)\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}