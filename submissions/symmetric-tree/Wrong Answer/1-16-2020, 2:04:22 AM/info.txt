{"id":294471584,"lang":"python3","time":"1 year, 6 months","timestamp":1579107862,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/294471584/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root):\n        if not root:\n            return True\n        queue = [root]\n        i = 0\n        while queue:\n            tmp_queue = []\n            tmp_vals = []\n            for node in queue:\n                tmp_vals.append(node.val)\n                if node.left:\n                    tmp_queue.append(node.left)\n                if node.right:\n                    tmp_queue.append(node.right)\n            if len(tmp_vals)!=2**i or tmp_vals[::-1]!=tmp_vals:\n                return False\n            queue = tmp_queue\n            i += 1\n        return True\n            \n        ","compare_result":"111111111110101111111101010111100011001111011110111111111101101111011000110110001111111101001111011110010110110111101101011110001001110010111101000011100110101100011000100111110011110011001101111","title_slug":"symmetric-tree"}