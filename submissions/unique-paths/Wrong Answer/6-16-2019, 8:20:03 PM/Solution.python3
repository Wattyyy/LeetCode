// https://leetcode.com/problems/unique-paths

def combination(n, r):
    comb = {}
    comb[(n, 0)] = 1
    comb[(n, 1)] = n
    if r==1:
        return n
    for i in range(1, r):
        comb[(n, i+1)] = (n-i)/(i+1) * comb[(n, i)]
    return int(comb[(n, r)])

class Solution:
    def uniquePaths(self, m, n):
        k = max(m-1, n-1)
        l = m + n -2
        return combination(l, k)
        
    