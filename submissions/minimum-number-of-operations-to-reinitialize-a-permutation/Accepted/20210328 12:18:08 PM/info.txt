{"id":473276201,"lang":"python3","time":"3 months, 2 weeks","timestamp":1616901488,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/473276201/","is_pending":"Not Pending","title":"Minimum Number of Operations to Reinitialize a Permutation","memory":"14.6 MB","code":"from collections import defaultdict\nclass Solution:\n    def reinitializePermutation(self, n: int) -> int:\n        ls = [i for i in range(n)]\n        key = tuple(ls)\n        conv = defaultdict(int)\n        for i in range(n):\n            if i % 2 == 0:\n                conv[i] = i // 2\n            else:\n                conv[i] = (n // 2) + (i - 1) // 2\n        cnt = 0\n        while True:\n            new = ls[:]\n            for i in range(n):\n                new[i] = conv[new[i]]\n            cnt += 1\n            if tuple(new) == key:\n                return cnt\n            else:\n                ls = new\n\n\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-operations-to-reinitialize-a-permutation"}