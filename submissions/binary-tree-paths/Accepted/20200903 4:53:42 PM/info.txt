{"id":390377297,"lang":"python3","time":"10 months, 1 week","timestamp":1599119622,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/390377297/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def __init__(self):\n        self.ans = []\n\n    def backtrack(self, node, cur):\n        if not node.left and not node.right:\n            item = '->'.join(cur)\n            self.ans.append(item)\n        if node.left:\n            cur.append(str(node.left.val))\n            self.backtrack(node.left, cur)\n            cur.pop(-1)\n        if node.right:\n            cur.append(str(node.right.val))\n            self.backtrack(node.right, cur)\n            cur.pop(-1)\n        \n\n    def binaryTreePaths(self, root):\n        if not root:\n            return []\n        self.backtrack(root, [str(root.val)])\n        return self.ans\n\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}