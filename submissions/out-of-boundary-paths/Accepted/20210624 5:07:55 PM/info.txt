{"id":512465079,"lang":"python3","time":"2 weeks, 5 days","timestamp":1624522075,"status_display":"Accepted","runtime":"584 ms","url":"/submissions/detail/512465079/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"18.5 MB","code":"class Solution:\n    def findPaths(self, m: int, n: int, maxMove: int, startRow: int, startColumn: int) -> int:\n        # dp[row][col][move] = paths\n        M = 7 + 10 ** 9\n        R, C = m, n\n        dp = [[[0 for _ in range(maxMove + 1)] for __ in range(C)] for ___ in range(R)]\n        for move in range(1, maxMove+1):\n            for r in range(R):\n                for c in range(C):\n                    nexts = [(r, c-1), (r, c+1), (r-1, c), (r+1, c)]\n                    for nr, nc in nexts:\n                        if 0 <= nr < R and 0 <= nc < C:\n                            dp[r][c][move] += dp[nr][nc][move-1]\n                            dp[r][c][move] %= M\n                        else:\n                            dp[r][c][move] += 1\n                            dp[r][c][move] %= M\n            \n        return dp[startRow][startColumn][maxMove] % M\n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"out-of-boundary-paths"}