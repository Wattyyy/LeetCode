{"id":333032069,"lang":"python3","time":"1 year, 2 months","timestamp":1588396942,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/333032069/","is_pending":"Not Pending","title":"All Paths from Source Lead to Destination","memory":"N/A","code":"from collections import defaultdict, deque\nimport sys\nsys.setrecursionlimit(10 ** 6)\nclass Solution:\n    def __init__(self):\n        self.ans = True\n\n    def dfs(self, v, target, graph, cnt):\n        if cnt > 25000:\n            self.ans = False\n            return\n        if v == target:\n            if len(graph[v]) == 0:\n                return \n            self.ans = False\n            return\n        \n        if not graph[v]:\n            self.ans = False\n            return\n        \n        for nv in graph[v]:\n            self.dfs(nv, target, graph, cnt+1)\n                \n\n    def leadsToDestination(self, n, edges, source, destination):\n        if edges == [[]]:\n            return source == destination\n        graph = defaultdict(list)\n        for u, v in edges:\n            graph[u].append(v)\n        self.dfs(source, destination, graph, 0)\n        return self.ans\n","compare_result":"111111111111111111111111100000000000000000000000","title_slug":"all-paths-from-source-lead-to-destination"}