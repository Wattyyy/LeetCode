{"id":307295113,"lang":"python3","time":"1 year, 4 months","timestamp":1582779657,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/307295113/","is_pending":"Not Pending","title":"LRU Cache","memory":"N/A","code":"from collections import OrderedDict\nclass LRUCache:\n\n    def __init__(self, capacity):\n        self.dic = OrderedDict()\n        self.capacity = capacity\n\n    def get(self, key):\n        if key in self.dic:\n            self.dic.move_to_end(key)\n            return self.dic[key]\n        else:\n            return -1\n\n    def put(self, key, value):\n        if len(self.dic) < self.capacity:\n            self.dic[key] = value\n        else:\n            self.dic.popitem(last = False)\n            self.dic[key] = value\n\n        \n        \n\n        \n\n\n# Your LRUCache object will be instantiated and called as such:\n# obj = LRUCache(capacity)\n# param_1 = obj.get(key)\n# obj.put(key,value)","compare_result":"111111110111000000","title_slug":"lru-cache"}