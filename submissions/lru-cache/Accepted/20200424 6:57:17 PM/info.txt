{"id":329406703,"lang":"python3","time":"1 year, 2 months","timestamp":1587722237,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/329406703/","is_pending":"Not Pending","title":"LRU Cache","memory":"23 MB","code":"from collections import OrderedDict\nclass LRUCache:\n\n    def __init__(self, capacity):\n        self.od = OrderedDict()\n        self.capa = capacity\n        \n\n    def get(self, key):\n        if key not in self.od:\n            return -1\n        res = self.od[key]\n        self.od.move_to_end(key)\n        return res\n\n    def put(self, key, value):\n        if key in self.od:\n            self.od[key] = value\n            self.od.move_to_end(key)\n            return \n        if len(self.od) == self.capa:\n            self.od.popitem(last=False)\n            self.od[key] = value\n        else:\n            self.od[key] = value\n        \n        \n\n\n# Your LRUCache object will be instantiated and called as such:\n# obj = LRUCache(capacity)\n# param_1 = obj.get(key)\n# obj.put(key,value)","compare_result":"111111111111111111","title_slug":"lru-cache"}