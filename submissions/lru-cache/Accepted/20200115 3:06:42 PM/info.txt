{"id":294356368,"lang":"python3","time":"1 year, 6 months","timestamp":1579068402,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/294356368/","is_pending":"Not Pending","title":"LRU Cache","memory":"22.1 MB","code":"from collections import OrderedDict\nclass LRUCache:\n    def __init__(self, capacity):\n        self.dic = OrderedDict()\n        self.capacity = capacity\n        \n    def get(self, key):\n        if key in self.dic.keys():\n            self.dic.move_to_end(key)\n            return self.dic[key]\n        else:\n            return -1\n        \n    def put(self, key, value):\n        if key in self.dic.keys():\n            self.dic[key] = value\n            self.dic.move_to_end(key)\n        else:\n            self.dic[key] = value\n        if len(self.dic) > self.capacity:\n            self.dic.popitem(last=False)\n        \n        \n        \n\n# Your LRUCache object will be instantiated and called as such:\n# obj = LRUCache(capacity)\n# param_1 = obj.get(key)\n# obj.put(key,value)","compare_result":"111111111111111111","title_slug":"lru-cache"}