{"id":378272897,"lang":"python3","time":"11 months, 1 week","timestamp":1596954300,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/378272897/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"16.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def __init__(self):\n        self.distance = []\n\n    def traverse(self, node, target):\n        self.distance.append([abs(node.val - target), node.val])\n        if node.left:\n            self.traverse(node.left, target)\n        if node.right:\n            self.traverse(node.right, target)\n\n    def closestValue(self, root, target):\n        self.traverse(root, target)\n        self.distance = sorted(self.distance)\n        return self.distance[0][1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value"}