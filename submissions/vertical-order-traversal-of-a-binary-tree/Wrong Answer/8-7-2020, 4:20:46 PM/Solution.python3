// https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import defaultdict, deque
class Solution:
    def verticalTraversal(self, root):
        if not root:
            return []
        dic = defaultdict(list)
        queue = deque([ (root, 0) ])
        while queue:
            node, x = queue.popleft()
            dic[x].append(node.val)
            if node.left:
                queue.append((node.left, x-1))
            if node.right:
                queue.append((node.right, x+1))

        ans = []
        keys = sorted(dic.keys())
        for key in keys:
            ans.append(dic[key])
        return ans

        
        