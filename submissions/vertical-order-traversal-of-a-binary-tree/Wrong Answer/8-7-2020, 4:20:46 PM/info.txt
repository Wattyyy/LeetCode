{"id":377343298,"lang":"python3","time":"11 months, 1 week","timestamp":1596784846,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/377343298/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import defaultdict, deque\nclass Solution:\n    def verticalTraversal(self, root):\n        if not root:\n            return []\n        dic = defaultdict(list)\n        queue = deque([ (root, 0) ])\n        while queue:\n            node, x = queue.popleft()\n            dic[x].append(node.val)\n            if node.left:\n                queue.append((node.left, x-1))\n            if node.right:\n                queue.append((node.right, x+1))\n\n        ans = []\n        keys = sorted(dic.keys())\n        for key in keys:\n            ans.append(dic[key])\n        return ans\n\n        \n        ","compare_result":"111111111111011010000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}