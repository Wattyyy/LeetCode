// https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import defaultdict
class Solution:
    def __init__(self):
        self.dict = defaultdict(list)

    def traverse(self, node, x):
        self.dict[x].append(node.val)
        if node.left:
            self.traverse(node.left, x-1)
        if node.right:
            self.traverse(node.right, x+1)
        
    def verticalTraversal(self, root):
        if not root:
            return []
        self.traverse(root, 0)
        ans = []
        keys = sorted(self.dict.keys())
        for key in keys:
            ans.append(self.dict[key])
        return ans

        
        