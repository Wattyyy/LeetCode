{"id":469415761,"lang":"python3","time":"3 months, 3 weeks","timestamp":1616078284,"status_display":"Accepted","runtime":"216 ms","url":"/submissions/detail/469415761/","is_pending":"Not Pending","title":"Wiggle Subsequence","memory":"14.3 MB","code":"class Solution:\n    def wiggleMaxLength(self, nums):\n        N = len(nums)\n        down, neutral, up = [0] * N, [1] *N, [0] * N\n        for i in range(1, N):\n            r_num = nums[i]\n            for j in range(0, i):\n                l_num = nums[j]\n                # update down\n                if l_num > r_num:\n                    down[i] = max(down[i], neutral[j] + 1, up[j] + 1)\n                # update up\n                if l_num < r_num:\n                    up[i] = max(up[i], neutral[j] + 1, down[j] + 1)\n        return max(max(down), max(neutral), max(up))\n","compare_result":"11111111111111111111111111","title_slug":"wiggle-subsequence"}