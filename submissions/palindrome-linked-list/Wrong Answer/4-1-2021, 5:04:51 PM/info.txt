{"id":475030723,"lang":"python3","time":"3 months, 1 week","timestamp":1617264291,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/475030723/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def isPalindrome(self, head: ListNode) -> bool:\n        # check number of nodes\n        cur = head\n        length = 0\n        while cur:\n            length += 1\n            cur = cur.next\n        \n        if length % 2 == 0:\n            val = 0\n            cur = head\n            while cur:\n                val = val ^ cur.val\n                cur = cur.next\n            return (val == 0)\n\n        else:\n            mid_val = 0\n            cur = head\n            idx = 0\n            while cur:\n                idx += 1\n                if idx == (length // 2) + 1:\n                    mid_val = cur.val\n                    break\n                cur = cur.next\n    \n            val = 0\n            cur = head\n            while cur:\n                val = val ^ cur.val\n                cur = cur.next\n            return (val == mid_val)\n\n\n\n            \n\n","compare_result":"111111111110111110110111111101111111111111111111111111111111110111011111111111111111","title_slug":"palindrome-linked-list"}