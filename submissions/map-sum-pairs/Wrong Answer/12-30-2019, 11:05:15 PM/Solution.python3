// https://leetcode.com/problems/map-sum-pairs

class TrieNode:
    def __init__(self, char=None, val=0):       
        # hash[char] -> Node
        self.childrenMap = {}
        self.val = 0
    
class MapSum:
    def __init__(self):
        self.root = TrieNode()
        

    def insert(self, key, val):
        cur = self.root
        for i in range(len(key)):
            char = key[i]
            if char not in cur.childrenMap.keys():
                cur.childrenMap[char] = TrieNode(char=char, val=0)
            cur.childrenMap[char].val += val
            cur = cur.childrenMap[char]
        
    def sum(self, prefix):
        cur = self.root
        for i in range(len(prefix)):
            char = prefix[i]
            if char not in cur.childrenMap.keys():
                return False
            cur = cur.childrenMap[char]
        return cur.val
            
        


# Your MapSum object will be instantiated and called as such:
# obj = MapSum()
# obj.insert(key,val)
# param_2 = obj.sum(prefix)