{"id":338816299,"lang":"python3","time":"1 year, 2 months","timestamp":1589383465,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/338816299/","is_pending":"Not Pending","title":"Remove K Digits","memory":"15 MB","code":"from collections import deque\nfrom bisect import bisect_right\n\nclass Solution:\n    def removeKdigits(self, num, k):\n        ls_num = list(map(int, list(num)))\n        idx_stack, num_stack = [0], [ls_num[0]]\n        rm_queue = deque([])\n        for i, v in enumerate(ls_num):\n            if i == 0:\n                continue\n            if num_stack[-1] <= v:\n                idx_stack.append(i)\n                num_stack.append(v)\n            else:\n                res = bisect_right(num_stack, v)\n                cnt = len(num_stack) - res\n                while cnt > 0:\n                    idx, _ = idx_stack.pop(), num_stack.pop()\n                    rm_queue.append(idx)\n                    cnt -= 1\n                idx_stack.append(i)\n                num_stack.append(v)\n\n        ans = []\n        remain = k\n        while 0 < remain and rm_queue:\n            idx = rm_queue.popleft()\n            ls_num[idx] = '-'    \n            remain -= 1\n\n        for _, v in enumerate(ls_num):\n            if v == '-':\n                continue\n            if len(ans) == 0 and v == 0:\n                continue\n            else:\n                ans.append(v)\n        \n        while 0 < remain and ans:\n            ans.pop()\n            remain -= 1\n        if not ans:\n            return '0'\n        return ''.join(list(map(str, ans)))\n","compare_result":"111111111111111111111111111111111","title_slug":"remove-k-digits"}