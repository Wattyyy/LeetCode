// https://leetcode.com/problems/n-ary-tree-postorder-traversal

"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""
from collections import deque
class Solution:
    def postorder(self, root: 'Node') -> List[int]:
        if not root:
            return []
        st = deque([root])
        ans = []
        visited = set()
        while st:
            top = st[-1]
            if top.children:
                vst_flag = 1
                tmp = deque([])
                for child in reversed(top.children):
                    vst_flag = vst_flag & (child.val not in visited)
                    if vst_flag == 0:
                        ans.append(top.val)
                        visited.add(top.val)
                        st.pop()
                        tmp = deque([])
                        break
                    tmp.append(child)
                st = st + tmp    
            else:
                ans.append(top.val)
                visited.add(top.val)
                st.pop()
        
        return ans



        