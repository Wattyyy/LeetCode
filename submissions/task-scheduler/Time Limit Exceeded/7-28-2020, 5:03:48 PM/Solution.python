// https://leetcode.com/problems/task-scheduler

from collections import Counter, defaultdict

class Solution:
    def leastInterval(self, tasks, n):
        if n == 0:
            return len(tasks)
        if not tasks:
            return 0

        ans = 0
        counter = Counter(tasks)
        time_dic = defaultdict(int)
        for task_name in counter.keys():
            time_dic[task_name] = 0
            
        flag = True
        while flag:
            options = []
            for task_name, time in time_dic.items():
                if time == 0:
                    remain = counter[task_name]
                    options.append((remain, task_name))
            options = sorted(options, reverse=True)
            if options:
                task_name = options[0][1]
                time_dic[task_name] += (n + 1)
                counter[task_name] -= 1
                
            # elapse
            for task_name, time in time_dic.items():
                if time > 0:
                    time_dic[task_name] -= 1
            ans += 1
            
            # end judging 
            flag = False
            if any([remain > 0 for remain in counter.values()]):
                flag = True
                        
        return ans


                

            

        