{"id":372656268,"lang":"python3","time":"11 months, 2 weeks","timestamp":1595923159,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/372656268/","is_pending":"Not Pending","title":"Task Scheduler","memory":"N/A","code":"from collections import Counter, defaultdict\n\nclass Solution:\n    def leastInterval(self, tasks, n):\n        if n == 0:\n            return len(tasks)\n        if not tasks:\n            return 0\n\n        ans = 0\n        counter = Counter(tasks)\n        time_dic = defaultdict(int)\n        for task_name in counter.keys():\n            time_dic[task_name] = 0\n            \n        flag = True\n        while flag:\n            options = []\n            for task_name, time in time_dic.items():\n                if time == 0:\n                    remain = counter[task_name]\n                    options.append((remain, task_name))\n            options = sorted(options, reverse=True)\n            if len(options) > 0:\n                task_name = options[0][1]\n                time_dic[task_name] += (n + 1)\n                counter[task_name] -= 1\n                \n            # elapse\n            for task_name, time in time_dic.items():\n                if time > 0:\n                    time_dic[task_name] -= 1\n            ans += 1\n            \n            # end judging \n            flag = False\n            if any([remain > 0 for remain in counter.values()]):\n                flag = True\n                        \n        return ans\n\n\n                \n\n            \n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111000000000000000","title_slug":"task-scheduler"}