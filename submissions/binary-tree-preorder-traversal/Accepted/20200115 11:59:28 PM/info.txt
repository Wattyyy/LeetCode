{"id":294447310,"lang":"python3","time":"1 year, 6 months","timestamp":1579100368,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/294447310/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"12.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nfrom collections import deque\nclass Solution:\n    def preorderTraversal(self, root):\n        if not root:\n            return []\n        stack = deque([root])\n        ans = []\n        while stack:\n            node = stack.pop()\n            ans.append(node.val)\n            if node.right:\n                stack.append(node.right)\n            if node.left:\n                stack.append(node.left)\n        return ans\n                \n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}