{"id":305478248,"lang":"python3","time":"1 year, 4 months","timestamp":1582298943,"status_display":"Accepted","runtime":"1076 ms","url":"/submissions/detail/305478248/","is_pending":"Not Pending","title":"Contiguous Array","memory":"18.7 MB","code":"from collections import defaultdict\nclass Solution:\n    def findMaxLength(self, nums):\n        if not nums:\n            return 0\n        nums = [-1 if num==0 else 1 for num in nums]\n        print(nums)\n        cum_sum = [0] * len(nums)\n        cum_sum[0] += nums[0]\n        sum2idx = defaultdict(int)\n        sum2idx[0], sum2idx[cum_sum[0]] = -1, 0\n        ans = 0\n        for i in range(1, len(nums)):\n            cum_sum[i] = cum_sum[i-1] + nums[i]\n            if cum_sum[i] not in sum2idx.keys():\n                sum2idx[cum_sum[i]] = i\n            else:\n                ans = max(ans, i - sum2idx[cum_sum[i]])\n        return ans","compare_resulttitle_slug":"contiguous-array"}