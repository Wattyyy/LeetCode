{"id":329425299,"lang":"python3","time":"1 year, 2 months","timestamp":1587727336,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/329425299/","is_pending":"Not Pending","title":"Hand of Straights","memory":"15.3 MB","code":"from collections import OrderedDict\nclass Solution:\n    def isNStraightHand(self, hand, W):\n        if len(hand) % W != 0:\n            return False\n        od = OrderedDict()\n        hand = sorted(hand)\n        for _, val in enumerate(hand):\n            if val not in od:\n                od[val] = 0\n            od[val] += 1\n        arranged = []\n        tmp = []\n        while od:\n            if not tmp:\n                key =  next(iter(od))\n                tmp.append(key)\n                od[key] -= 1\n            else:\n                key = tmp[-1] + 1\n                if key not in od: \n                    return False\n                tmp.append(key)\n                od[key] -= 1\n            if od[key] == 0:\n                del od[key]\n            if len(tmp) == W:\n                arranged.append(tmp)\n                tmp = []\n                \n        return True\n\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights"}