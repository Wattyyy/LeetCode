{"id":310159209,"lang":"python3","time":"1 year, 4 months","timestamp":1583592278,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/310159209/","is_pending":"Not Pending","title":"Increasing Decreasing String","memory":"12.9 MB","code":"import heapq\nfrom collections import Counter\n\nclass Solution:\n    def sortString(self, s):\n        num_list = [ord(char)-60 for char in s]\n        num_cnt = Counter(num_list)\n\n        res = []\n        while num_cnt.keys():\n\n            min_heap = list(num_cnt.keys())\n            heapq.heapify(min_heap)\n            while min_heap:\n                num = heapq.heappop(min_heap)\n                num_cnt[num] -= 1\n                if num_cnt[num] == 0:\n                    del num_cnt[num]\n                res.append(chr(num + 60))\n\n            max_heap = [-num for num in num_cnt.keys()]\n            heapq.heapify(max_heap)\n            while max_heap:\n                num = heapq.heappop(max_heap)\n                num = abs(num)\n                num_cnt[num] -= 1\n                if num_cnt[num] == 0:\n                    del num_cnt[num]\n                res.append(chr(num + 60))\n        \n        return ''.join(res)\n            \n\n        \n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"increasing-decreasing-string"}