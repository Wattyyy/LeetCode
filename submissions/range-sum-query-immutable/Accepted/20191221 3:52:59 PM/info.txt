{"id":287485536,"lang":"python3","time":"1 year, 6 months","timestamp":1576911179,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/287485536/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"16.4 MB","code":"class NumArray:\n    \n    def __init__(self, nums):\n        self.length = len(nums)\n        self.tree = [0 for _ in range(2*self.length)]\n        # build tree \n        n = self.length\n        i = n\n        j = 0\n        # fill in elements of n~2n-1\n        while i<2*n:\n            self.tree[i] = nums[j]\n            i += 1\n            j += 1\n        # fill in elements of 1~n-1\n        for i in range(n-1, 0, -1):\n            self.tree[i] = self.tree[i*2] + self.tree[i*2 + 1]\n        \n    def sumRange(self, l, r):\n        if l > r:\n            l, r = r, l\n        # 0 <= l,r < n\n        n = self.length\n        l += n\n        r += n\n        res = 0\n        while l<=r:\n            \n            if l%2==1:\n                res += self.tree[l]\n                l += 1\n            if r%2==0:\n                res += self.tree[r]\n                r -= 1\n            l //= 2\n            r //= 2\n        return res\n       \n\n\n\n\n# Your NumArray object will be instantiated and called as such:\n# obj = NumArray(nums)\n# param_1 = obj.sumRange(i,j)","compare_result":"1111111111111111","title_slug":"range-sum-query-immutable"}