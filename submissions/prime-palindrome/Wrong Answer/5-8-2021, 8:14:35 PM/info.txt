{"id":490369216,"lang":"python3","time":"2Â months","timestamp":1620472475,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/490369216/","is_pending":"Not Pending","title":"Prime Palindrome","memory":"N/A","code":"class Solution:\n    def backtrack(self, i, end):\n        if i == end:\n            val = int(''.join(self.char_list))\n            if self.check(val) and self.is_prime(val) and self.N <= val:\n                self.ans = min(self.ans, val)\n            return\n\n        elif i == 0:\n            for j in range(1, 10):\n                self.char_list[i] = str(j)\n                self.char_list[-1-i] = str(j)\n                self.backtrack(i+1, end)\n        else:\n            for j in range(10):\n                self.char_list[i] = str(j)\n                self.char_list[-1-i] = str(j)\n                self.backtrack(i+1, end)\n            \n\n    def is_prime(self, n) :\n        if n <= 1:\n            return False\n        if n <= 3:\n            return True\n        # check 6k+0,2,3,4\n        if (n % 2 == 0 or n % 3 == 0):\n            return False\n        i = 5\n        while(i * i <= n) :\n            # check 6k+1, 6k+5\n            if (n % i == 0 or n % (i + 2) == 0):\n                return False\n            i = i + 6\n        return True\n\n    def check(self, val):\n        # is palindrome\n        str_val = str(val)\n        for i in range( len(str_val) // 2 ):\n            if str_val[i] != str_val[-1-i]:\n                return False\n        return True\n    \n    def primePalindrome(self, N: int) -> int:\n        self.ans = float('inf')\n        self.N = N\n        for i in range(1, 9):\n            self.char_list = ['0'] * i\n            if i % 2 == 1:\n                end = i // 2 + 1\n            else:\n                end = i // 2\n            self.backtrack(0, end)\n        return self.ans\n","compare_result":"111111111111111111111111111111111111111111111111111000000011","title_slug":"prime-palindrome"}