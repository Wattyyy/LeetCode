{"id":286086539,"lang":"python3","time":"1 year, 7 months","timestamp":1576394518,"status_display":"Accepted","runtime":"268 ms","url":"/submissions/detail/286086539/","is_pending":"Not Pending","title":"Regions Cut By Slashes","memory":"13.2 MB","code":"class UnionFind():\n    def __init__(self, N):\n        self.node2par = {i:i for i in range(N)}\n        self.rank = {i:0 for i in range(N)}\n        self.count = N\n\n    def find_par(self, x):\n        if self.node2par[x]==x:\n            return x\n        else:\n            x = self.find_par(self.node2par[x])\n            return x\n\n    def unite(self, x, y):\n        x, y = self.find_par(x), self.find_par(y)\n        if x==y:\n            return\n        if self.rank[x]<self.rank[y]:\n            self.node2par[x] = y\n        else:\n            self.node2par[y] = x\n        if self.rank[x]==self.rank[y]:\n            self.rank[x]+=1\n        self.count -= 1\n\n\nclass Solution:\n    def regionsBySlashes(self, grid):\n        if not grid:\n            return 0\n        N = len(grid)\n        uf = UnionFind(4*(N**2))\n        for h in range(N):\n            for w in range(N):\n                # set starting point                 \n                sp = (4*N)*h + 4*w\n                if grid[h][w]==\"/\":\n                    uf.unite(sp, sp+3)\n                    uf.unite(sp+1, sp+2)\n    \n                elif grid[h][w]==\"\\\\\":\n                    uf.unite(sp, sp+1)\n                    uf.unite(sp+2, sp+3)\n                \n                else:\n                    uf.unite(sp, sp+1)\n                    uf.unite(sp, sp+2)\n                    uf.unite(sp, sp+3)\n                \n                if h!=0:\n                    # unite upper grid\n                    uf.unite(sp, (sp-4*N)+2)\n                if w!=N-1:\n                    # unite right grid\n                    uf.unite(sp+1, (sp+4)+3)\n                if h!=N-1:\n                    # unite lower grid\n                    uf.unite(sp+2, (sp+4*N))\n                if w!=0:\n                    # unite left grid\n                    uf.unite(sp+3, (sp-4)+1)\n                    \n        return uf.count","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regions-cut-by-slashes"}