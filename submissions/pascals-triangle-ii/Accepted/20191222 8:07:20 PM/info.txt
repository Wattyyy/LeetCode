{"id":287735467,"lang":"python3","time":"1 year, 6 months","timestamp":1577012840,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/287735467/","is_pending":"Not Pending","title":"Pascal's Triangle II","memory":"12.9 MB","code":"# https://leetcode.com/problems/pascals-triangle/\n\nclass Solution:\n    def getRow(self, rowIndex):\n        if rowIndex < 0:\n            return []\n        # index starts from 1\n        numRows = rowIndex + 1\n        if numRows==1:\n            return [1]\n        dp = {} \n        dp[(1,1)] = 1\n        for i in range(2, numRows+1):\n            for j in range(1, i+1):\n                if j==1:\n                    dp[(i, j)] = 1\n                elif j==i:\n                    dp[(i, j)] = 1\n                else:\n                    dp[(i, j)] = dp[(i-1, j-1)] + dp[(i-1, j)]\n        \n        ans = []\n        for j in range(1, numRows+1):\n            ans.append(dp[(numRows, j)])\n        return ans\n            ","compare_result":"1111111111111111111111111111111111","title_slug":"pascals-triangle-ii"}