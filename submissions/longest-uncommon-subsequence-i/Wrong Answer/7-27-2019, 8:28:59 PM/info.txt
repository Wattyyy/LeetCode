{"id":246687835,"lang":"python3","time":"1 year, 11 months","timestamp":1564226939,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/246687835/","is_pending":"Not Pending","title":"Longest Uncommon Subsequence I","memory":"N/A","code":"class Solution:\n    def findLUSlength(self, a: str, b: str) -> int:\n        # avoid indexing miss\n        H, W = len(a)+1, len(b)+1\n        table = [[0 for _ in range(W)] for __ in range(H)]\n        a = \"-\" + a\n        b = \"-\" + b\n        for i in range(1, H):\n            for j in range(1, W):\n                if a[i]!=b[j]:\n                    table[i][j] = table[i-1][j-1] + 1 \n                else:\n                    table[i][j] = max(table[i][j-1], table[i-1][j])\n        if table[H-1][W-1]==0:\n            return -1\n        else:\n            return table[H-1][W-1]","compare_result":"11100100000000000010000000000000000000000","title_slug":"longest-uncommon-subsequence-i"}