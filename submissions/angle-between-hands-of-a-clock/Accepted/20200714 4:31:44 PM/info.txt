{"id":366405016,"lang":"python3","time":"12Â months","timestamp":1594711904,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/366405016/","is_pending":"Not Pending","title":"Angle Between Hands of a Clock","memory":"29 MB","code":"import numpy as np\nclass Solution:\n    def angleClock(self, hour, minutes):\n        h_rad = ( (2 * np.pi) * (hour + (minutes / 60) ) ) / 12\n        m_rad = (2 * np.pi * minutes) / 60\n        h_vec = np.array([np.cos(h_rad), np.sin(h_rad)])\n        m_vec = np.array([np.cos(m_rad), np.sin(m_rad)])\n        angle = np.arccos( (np.dot(h_vec, m_vec)) / (np.linalg.norm(h_vec) * np.linalg.norm(m_vec)) )\n        return angle * 180 / np.pi\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"angle-between-hands-of-a-clock"}