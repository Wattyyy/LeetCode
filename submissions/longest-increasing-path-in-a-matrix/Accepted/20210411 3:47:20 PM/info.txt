{"id":479195150,"lang":"python3","time":"3Â months","timestamp":1618123640,"status_display":"Accepted","runtime":"1456 ms","url":"/submissions/detail/479195150/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"24 MB","code":"from collections import defaultdict, deque\n\nclass Solution:\n    def topological_sort(self, graph):\n        in_order = {key:0 for key in graph}\n        for key1 in graph:\n            for key2 in graph[key1]:\n                in_order[key2] += 1\n        queue = deque([])\n        for key in in_order:\n            if in_order[key] == 0:\n                queue.append(key)\n        cnt = 0\n        res = []\n        while queue:\n            v = queue.popleft()\n            res.append(v)\n            for neighbor in graph[v]:\n                in_order[neighbor] -= 1\n                if in_order[neighbor] == 0:\n                    queue.append(neighbor)\n            cnt += 1\n        return res\n\n\n    def longestIncreasingPath(self, matrix):\n        graph = defaultdict(list)\n        R, C = len(matrix), len(matrix[0])\n        dist = {}\n        for r in range(R):\n            for c in range(C):\n                graph[(r, c)] = []\n                dist[(r, c)] = -1\n                for nr, nc in [(r-1, c), (r+1, c), (r, c-1), (r, c+1)]:\n                    if (0 <= nr < R) and (0 <= nc < C) and (matrix[r][c] < matrix[nr][nc]):\n                        graph[(r, c)].append((nr, nc))\n\n        N = len(graph)\n        order = self.topological_sort(graph)\n        def dfs(key, cnt):\n            if cnt <= dist[key]:\n                return\n            dist[key] = cnt\n            for next_key in graph[key]:\n                dfs(next_key, cnt+1)\n        \n        for key in order:\n            dfs(key, 0)\n        \n        return max(dist.values()) + 1\n\n\n                ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-path-in-a-matrix"}