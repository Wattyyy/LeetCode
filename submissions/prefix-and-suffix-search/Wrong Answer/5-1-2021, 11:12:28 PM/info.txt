{"id":487423554,"lang":"python3","time":"2 months, 1 week","timestamp":1619878348,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/487423554/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"N/A","code":"from typing import List\nclass Trie:\n    def __init__(self) -> None:\n        self.children = {}\n        self.indices = set()\n    \n\nclass WordFilter:\n    def __init__(self, words: List[str]):\n        self.prefix_trie = Trie()\n        for i, word in enumerate(words):\n            cur = self.prefix_trie\n            for char in word:\n                if char not in cur.children:\n                    cur.children[char] = Trie()\n                cur = cur.children[char]\n                cur.indices.add(i)\n        \n        self.suffix_trie = Trie()\n        for i, word in enumerate(words):\n            cur = self.suffix_trie\n            for char in reversed(word):\n                if char not in cur.children:\n                    cur.children[char] = Trie()\n                cur = cur.children[char]\n                cur.indices.add(i)\n        \n\n    def f(self, prefix: str, suffix: str) -> int:\n        pre_cur = self.prefix_trie\n        for char in prefix:\n            if char not in pre_cur.children:\n                return -1\n            pre_cur = pre_cur.children[char]\n        \n        suf_cur = self.suffix_trie\n        for char in suffix:\n            if char not in suf_cur.children:\n                return -1\n            suf_cur = suf_cur.children[char]\n        \n        tmp = suf_cur.indices.intersection(pre_cur.indices)\n        if len(tmp) == 0:\n            return -1\n        return min(tmp)\n        \n        \n\n\n# Your WordFilter object will be instantiated and called as such:\n# obj = WordFilter(words)\n# param_1 = obj.f(prefix,suffix)","compare_result":"101100000","title_slug":"prefix-and-suffix-search"}