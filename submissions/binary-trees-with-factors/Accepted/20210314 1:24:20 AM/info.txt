{"id":467272774,"lang":"python3","time":"4Â months","timestamp":1615652660,"status_display":"Accepted","runtime":"8468 ms","url":"/submissions/detail/467272774/","is_pending":"Not Pending","title":"Binary Trees With Factors","memory":"17.6 MB","code":"from math import sqrt\nfrom collections import defaultdict\n\nclass Solution:\n    def numFactoredBinaryTrees(self, arr):\n        MOD = 10 ** 9 + 7 \n        arr = sorted( list(set(arr)) )\n        dp = defaultdict(int)\n        \n        for num in arr:\n            factors = set()\n            # prime factrization\n            for d in range(1, int(sqrt(num)) + 1):\n                if num % d != 0:\n                    continue\n                low_f, high_f = d, num // d \n                if low_f == 1:\n                    dp[num] += 1\n                elif low_f == high_f:\n                    dp[num] += dp[low_f] * dp[high_f]\n                else:\n                    dp[num] += 2 * dp[low_f] * dp[high_f]\n            dp[num] = dp[num] % MOD\n        \n        ans = 0\n        for k, v in dp.items():\n            ans += v\n        \n        return ans % MOD\n        \n","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-trees-with-factors"}