{"id":309880992,"lang":"python3","time":"1 year, 4 months","timestamp":1583502817,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/309880992/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"N/A","code":"class NumMatrix:\n    \n    def __init__(self, matrix):\n        if (matrix is None) or (not matrix):\n            return\n        self.mat = matrix\n        R, C = len(self.mat), len(self.mat[0])\n        for r in range(R):\n            for c in range(1, C):\n                self.mat[r][c] += self.mat[r][c-1]\n        for c in range(C):\n            for r in range(1, R):\n                self.mat[r][c] += self.mat[r-1][c]\n\n\n        \n    def sumRegion(self, row1, col1, row2, col2):\n        if row1 == row2 == 0:\n            return self.mat[row2][col2]\n        elif row1 == 0 and col1 != 0:\n            return self.mat[row2][col2] - self.mat[row2][col1-1]\n        elif row1 != 0 and col1 == 0:\n            return self.mat[row2][col2] - self.mat[row1-1][col2]\n        else:\n            return self.mat[row2][col2] + self.mat[row1-1][col1-1] - self.mat[row2][col1-1] - self.mat[row1-1][col2]\n               \n        \n\n\n# Your NumMatrix object will be instantiated and called as such:\n# obj = NumMatrix(matrix)\n# param_1 = obj.sumRegion(row1,col1,row2,col2)","compare_result":"111000011010","title_slug":"range-sum-query-2d-immutable"}