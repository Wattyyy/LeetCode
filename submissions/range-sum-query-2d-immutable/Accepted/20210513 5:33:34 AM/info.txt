{"id":492339355,"lang":"python3","time":"2Â months","timestamp":1620851614,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/492339355/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"16.9 MB","code":"from typing import List\nfrom itertools import accumulate\n\nclass NumMatrix:\n    def __init__(self, matrix: List[List[int]]):\n        self.R = len(matrix)\n        self.C = len(matrix[0])\n        self.sum_matrix = []\n        for r in range(self.R):\n            self.sum_matrix.append( list(accumulate(matrix[r])) )        \n\n    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:\n        res = 0\n        for r in range(row1, row2+1):\n            if col1 == 0:\n                res += self.sum_matrix[r][col2]\n            else:\n                res += self.sum_matrix[r][col2] - self.sum_matrix[r][col1-1]\n        return res\n\n\n\n        \n\n\n# Your NumMatrix object will be instantiated and called as such:\n# obj = NumMatrix(matrix)\n# param_1 = obj.sumRegion(row1,col1,row2,col2)","compare_result":"11111111111","title_slug":"range-sum-query-2d-immutable"}