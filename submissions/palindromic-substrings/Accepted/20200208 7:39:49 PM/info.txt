{"id":301295913,"lang":"python3","time":"1 year, 5 months","timestamp":1581158389,"status_display":"Accepted","runtime":"556 ms","url":"/submissions/detail/301295913/","is_pending":"Not Pending","title":"Palindromic Substrings","memory":"102 MB","code":"from collections import defaultdict\nclass Solution:\n    def countSubstrings(self, s):\n        N = len(s)\n        dp = defaultdict(bool)\n        for i in range(N):\n            dp[(i, i)] = True\n            if (i + 1 < N) and (s[i] == s[i+1]):\n                dp[(i, i+1)] = True\n        for i in reversed(range(N)):\n            for j in range(i+2, N):\n                if (s[i] == s[j]) and dp[(i+1, j-1)]:\n                    dp[(i, j)] = True\n        \n        ans = 0\n        for i in range(N):\n            for j in range(i, N):\n                if dp[(i, j)]:\n                    ans += 1\n        return ans\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindromic-substrings"}