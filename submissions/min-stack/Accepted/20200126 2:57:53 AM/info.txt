{"id":297298711,"lang":"python3","time":"1 year, 5 months","timestamp":1579975073,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/297298711/","is_pending":"Not Pending","title":"Min Stack","memory":"16.6 MB","code":"class MinStack:\n    def __init__(self):\n        self.stack = []\n    \n    def push(self, x):\n        # 1st element -> value\n        # 2nd element -> minmum value\n        if not self.stack:\n            self.stack.append((x, x))\n        else:\n            min_val = min(self.stack[-1][1], x)\n            self.stack.append((x, min_val))\n        \n    def pop(self):\n        self.stack.pop(-1)\n        \n    def top(self):\n        return self.stack[-1][0]\n        \n    def getMin(self):\n        return self.stack[-1][1]\n        \n        \n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(x)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"111111111111111111","title_slug":"min-stack"}