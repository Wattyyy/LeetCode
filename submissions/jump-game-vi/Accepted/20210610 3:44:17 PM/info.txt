{"id":505801928,"lang":"python3","time":"1Â month","timestamp":1623307457,"status_display":"Accepted","runtime":"1152 ms","url":"/submissions/detail/505801928/","is_pending":"Not Pending","title":"Jump Game VI","memory":"28 MB","code":"from typing import List\nfrom collections import deque\n\nclass Solution:\n    def maxResult(self, nums: List[int], k: int) -> int:\n        if k == 1:\n            return sum(nums)\n        if len(nums) == 1:\n            return nums[0]\n\n        dp = [0] * len(nums)\n        dp[0] = nums[0]\n\n        val_deque = deque([dp[0]])\n        idx_deque = deque([0])\n        for i, num in enumerate(nums):\n            if i == 0:\n                continue\n            dp[i] = val_deque[0] + num\n            if idx_deque[0] == i - k:\n                val_deque.popleft()\n                idx_deque.popleft()\n            while val_deque and val_deque[-1] < dp[i]:\n                val_deque.pop()\n                idx_deque.pop()\n            val_deque.append(dp[i])\n            idx_deque.append(i)\n        return dp[-1]\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-vi"}