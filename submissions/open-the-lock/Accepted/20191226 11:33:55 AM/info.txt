{"id":288587669,"lang":"python3","time":"1 year, 6 months","timestamp":1577327635,"status_display":"Accepted","runtime":"1924 ms","url":"/submissions/detail/288587669/","is_pending":"Not Pending","title":"Open the Lock","memory":"13.9 MB","code":"from collections import defaultdict, deque\n\nclass Solution:\n    def calc(self, string, i, j):\n        int_ls = list(map(int, string))\n        int_ls[i] += j\n        if int_ls[i] == 10:\n            int_ls[i] = 0\n        if int_ls[i] == -1:\n            int_ls[i] = 9\n        str_ls = [str(num) for num in  int_ls]\n        return \"\".join(str_ls)\n             \n        \n    def openLock(self, deadends, target):\n        deadends = set(deadends)\n        count_dict = defaultdict(int)\n        count_dict[\"0000\"], count_dict[target] = 0, 0\n        if \"0000\" in deadends:\n            return -1\n        \n        q = deque([\"0000\"])\n        nums = [-1, 1]\n        while q:\n            string = q.popleft()\n            if string == target:\n                return count_dict[string]\n            for i in range(4):\n                for num in nums:\n                    res = self.calc(string, i, num)\n                    if (res not in deadends) and (count_dict[res] == 0) and (res != \"0000\"):\n                        q.append(res)\n                        count_dict[res] = count_dict[string] + 1\n\n        return -1\n        ","compare_result":"1111111111111111111111111111111111111111111","title_slug":"open-the-lock"}