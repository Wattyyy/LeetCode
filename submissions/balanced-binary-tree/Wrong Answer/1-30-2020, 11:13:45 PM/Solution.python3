// https://leetcode.com/problems/balanced-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def __init__(self):
        self.heights = set()
        
    def calc_height(self, node, height):
        if (not node.left) and (not node.right):
            self.heights.add(height)
            return
        if node.left:
            self.calc_height(node.left, height+1)
        if node.right:
            self.calc_height(node.right, height+1)
        return

    
    def isBalanced(self, root):
        if not root:
            return True
        self.calc_height(root, 0)
        diff = abs(max(self.heights) - min(self.heights))
        if diff <= 1:
            return True
        else:
            return False
        
        
        