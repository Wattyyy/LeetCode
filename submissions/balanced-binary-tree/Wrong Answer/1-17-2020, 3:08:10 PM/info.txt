{"id":294953567,"lang":"python3","time":"1 year, 5 months","timestamp":1579241290,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/294953567/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isBalanced(self, root):\n        if not root:\n            return True\n        self.level_set = set()\n        def helper(node, level):\n            if (not node.left) and (not node.right):\n                self.level_set.add(level)\n                return\n            if node.left:\n                helper(node.left, level+1)\n            if node.right:\n                helper(node.right, level+1)\n        helper(root, 1)\n        if len(self.level_set) > 2:\n            return False\n        elif len(self.level_set)==2:\n            level_list = list(self.level_set)\n            if abs(level_list[0] - level_list[1]) == 1:\n                return True\n            else:\n                return False\n        else:\n            return True\n            \n        ","compare_result":"11111100100001001000000000111100000000000000000001111111111111100000000000000000000000000001101100001101100000000000000111111111111110010000100000011000011111111111111000000000000001101100001101100000000000000111100000111111110","title_slug":"balanced-binary-tree"}