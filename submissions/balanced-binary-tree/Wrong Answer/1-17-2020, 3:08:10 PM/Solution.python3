// https://leetcode.com/problems/balanced-binary-tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isBalanced(self, root):
        if not root:
            return True
        self.level_set = set()
        def helper(node, level):
            if (not node.left) and (not node.right):
                self.level_set.add(level)
                return
            if node.left:
                helper(node.left, level+1)
            if node.right:
                helper(node.right, level+1)
        helper(root, 1)
        if len(self.level_set) > 2:
            return False
        elif len(self.level_set)==2:
            level_list = list(self.level_set)
            if abs(level_list[0] - level_list[1]) == 1:
                return True
            else:
                return False
        else:
            return True
            
        