{"id":294952337,"lang":"python3","time":"1 year, 5 months","timestamp":1579240991,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/294952337/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isBalanced(self, root):\n        if not root:\n            return True\n        self.level = set()\n        def helper(node, level):\n            self.level.add(level)\n            if node.left:\n                helper(node.left, level+1)\n            if node.right:\n                helper(node.right, level+1)\n                \n        helper(root, 1)\n        level_list = sorted(list(self.level))\n        for i in range(len(level_list)-1):\n            if level_list[i+1] - level_list[i] != 1:\n                return False\n        return True\n            \n        ","compare_result":"10111100100011011000000000111100000000000000000000010011110010000000000000000000000000000000000000000000000000000000000000000000000000010000100000011000000000000000000000000000000000000000000000000000000000000111111111000000000","title_slug":"balanced-binary-tree"}