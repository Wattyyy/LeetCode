{"id":298752139,"lang":"python3","time":"1 year, 5 months","timestamp":1580398988,"status_display":"Accepted","runtime":"572 ms","url":"/submissions/detail/298752139/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"15.5 MB","code":"class Solution:\n    def minFallingPathSum(self, arr):\n        R, C = len(arr), len(arr[0])\n        dp = [[float(\"inf\") for _ in range(C)] for __ in range(R)]\n        # (DPvalue, index)\n        min_two = [(float(\"inf\"), -1), (float(\"inf\"), -1)]\n        for c in range(C):\n            dp[0][c] = arr[0][c]\n            if dp[0][c] < min_two[1][0]:\n                min_two[1] = (dp[0][c], c)\n                min_two = sorted(min_two)\n        \n        for r in range(1, R):\n            tmp_min_two = [(float(\"inf\"), -1), (float(\"inf\"), -1)]\n            for c in range(C):\n                if min_two[0][1] == c:\n                    dp[r][c] = arr[r][c] + min_two[1][0]\n                else:\n                    dp[r][c] = arr[r][c] + min_two[0][0]\n                if dp[r][c] < tmp_min_two[1][0]:\n                    tmp_min_two[1] = (dp[r][c], c)\n                    tmp_min_two = sorted(tmp_min_two)\n            min_two = tmp_min_two\n            \n        return min(dp[R-1])\n        ","compare_result":"1111111111111","title_slug":"minimum-falling-path-sum-ii"}