// https://leetcode.com/problems/minimum-falling-path-sum-ii

class Solution:
    def minFallingPathSum(self, arr):
        if not arr:
            return 0
        R, C = len(arr), len(arr[0])
        dp = [[float("inf") for _ in range(C)] for __ in range(R)]
        for c in range(C):
            dp[0][c] = arr[0][c]
            
        for r in xrange(1, R):
            for c in xrange(C):
                for j in xrange(C):
                    if j == c:
                        continue
                    dp[r][c] = min(arr[r][c] + dp[r-1][j], dp[r][c])
        return min(dp[R-1])
        