{"id":298748301,"lang":"python","time":"1 year, 5 months","timestamp":1580397716,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/298748301/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"N/A","code":"class Solution:\n    def minFallingPathSum(self, arr):\n        if not arr:\n            return 0\n        R, C = len(arr), len(arr[0])\n        dp = [[float(\"inf\") for _ in range(C)] for __ in range(R)]\n        for c in range(C):\n            dp[0][c] = arr[0][c]\n            \n        for r in xrange(1, R):\n            for c in xrange(C):\n                for j in xrange(C):\n                    if j == c:\n                        continue\n                    dp[r][c] = min(arr[r][c] + dp[r-1][j], dp[r][c])\n        return min(dp[R-1])\n        ","compare_result":"1111111111000","title_slug":"minimum-falling-path-sum-ii"}