{"id":365944738,"lang":"python3","time":"1Â year","timestamp":1594625208,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/365944738/","is_pending":"Not Pending","title":"Same Tree","memory":"13.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def __init__(self):\n        self.ans = True\n        \n    def search(self, p_node, q_node):\n        if (not p_node and not q_node) or (not self.ans):\n            return\n        \n        if not p_node or not q_node:\n            self.ans = False\n            return\n        \n        if p_node.val == q_node.val:\n            self.search(p_node.left, q_node.left)\n            self.search(p_node.right, q_node.right)\n            \n        else:\n            self.ans = False\n            return\n            \n    def isSameTree(self, p, q):\n        self.search(p, q)\n        return self.ans\n        \n        \n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree"}