{"id":328502557,"lang":"python3","time":"1 year, 2 months","timestamp":1587548108,"status_display":"Accepted","runtime":"508 ms","url":"/submissions/detail/328502557/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"18.5 MB","code":"from collections import defaultdict\nfrom bisect import bisect_right\n\nclass Solution:\n    def subarraysDivByK(self, A, K):\n        cum_mod_sum = [0]\n        for a in A:\n            num = cum_mod_sum[-1] + a\n            if num < 0:\n                num = -1 * (abs(num) % K)\n            else:\n                num = num % K\n            cum_mod_sum.append(num)\n        mod2idx = defaultdict(list)\n        for idx, mod in enumerate(cum_mod_sum):\n            mod2idx[mod].append(idx)\n        ans = 0\n        for idx, mod in enumerate(cum_mod_sum):\n            if mod in mod2idx:\n                res = bisect_right(mod2idx[mod], idx)\n                ans += len(mod2idx[mod]) - res\n            if 0 < mod and mod - K in mod2idx:\n                res = bisect_right(mod2idx[mod - K], idx)\n                ans += len(mod2idx[mod - K]) - res\n            elif mod < 0 and mod + K in mod2idx:\n                res = bisect_right(mod2idx[mod + K], idx)\n                ans += len(mod2idx[mod + K]) - res\n                \n        return ans\n\n\n\n            \n        \n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k"}