{"id":301650079,"lang":"python3","time":"1 year, 5 months","timestamp":1581240843,"status_display":"Accepted","runtime":"6692 ms","url":"/submissions/detail/301650079/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"190.1 MB","code":"from collections import defaultdict\nclass Solution:\n    def longestPalindromeSubseq(self, s):\n        N = len(s)\n        dp = defaultdict(int)\n        for i in range(N):\n            dp[(i, i)] = 1\n            if (i+1 < N):\n                if s[i] == s[i+1]:\n                    dp[(i, i+1)] = 2\n                else:\n                    dp[(i, i+1)] = 1\n        \n        for i in reversed(range(N-2)):\n            for j in range(i+2, N):\n                if s[i] == s[j]:\n                    dp[(i, j)] = dp[(i+1, j-1)] + 2\n                else:\n                    dp[(i, j)] = max(dp[(i, j-1)], dp[(i+1, j)])\n        \n        ans = 0\n        for i in range(N):\n            for j in range(N):\n                ans = max(ans, dp[(i, j)])\n        return ans\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence"}