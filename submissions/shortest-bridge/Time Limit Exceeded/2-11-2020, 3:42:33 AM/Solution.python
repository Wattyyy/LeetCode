// https://leetcode.com/problems/shortest-bridge

class Solution:
    def shortestBridge(self, A):
        island_map = {2:[], 3:[]}
        R, C = len(A), len(A[0])
        val = 2
        for r in xrange(R):
            for c in xrange(C):
                if A[r][c] == 1:
                    queue = [(r, c)]
                    while queue:
                        y, x = queue.pop(0)
                        A[y][x] = val
                        island_map[val].append((y, x))
                        for ny, nx in ((y+1, x), (y-1, x), (y, x+1), (y, x-1)):
                            if (0 <= ny) and (ny < R) and (0 <= nx) and (nx < C) and (A[ny][nx] == 1):
                                queue.append((ny, nx))
                    val += 1

        ans = 210
        for y2, x2 in island_map[2]:
            for y3, x3 in island_map[3]:
                ans = min(ans, abs(y2 - y3) + abs(x2 - x3) - 1)
        return ans        