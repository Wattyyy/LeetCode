{"id":302070498,"lang":"python","time":"1 year, 5 months","timestamp":1581359328,"status_display":"Accepted","runtime":"9748 ms","url":"/submissions/detail/302070498/","is_pending":"Not Pending","title":"Shortest Bridge","memory":"16.1 MB","code":"from collections import defaultdict\nclass Solution:\n    def shortestBridge(self, A):\n        island_map = defaultdict(list)\n        R, C = len(A), len(A[0])\n        def dfs(i, j, val):\n            A[i][j] = val\n            island_map[val].append((i, j))\n            vecs = [[i+1, j], [i-1, j], [i, j+1], [i, j-1]]\n            for vy, vx in vecs:\n                if (0 <= vy) and (vy < R) and (0 <= vx) and (vx < C) and (A[vy][vx] == 1):\n                    dfs(vy, vx, val)\n        \n        val = 2\n        for r in xrange(R):\n            for c in xrange(C):\n                if A[r][c] == 1:\n                    dfs(r, c, val)\n                    val += 1\n\n        ans = float(\"inf\")\n        for y2, x2 in island_map[2]:\n            for y3, x3 in island_map[3]:\n                ans = min(ans, abs(y2 - y3) + abs(x2 - x3) - 1)\n        return ans        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-bridge"}