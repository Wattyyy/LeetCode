{"id":311245677,"lang":"python3","time":"1 year, 4 months","timestamp":1583860890,"status_display":"Accepted","runtime":"940 ms","url":"/submissions/detail/311245677/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"13.4 MB","code":"from collections import Counter\nclass Solution:\n    def minWindow(self, s, t):\n        s_cnt, t_cnt = Counter(s), Counter(t)\n        for char in t_cnt:\n            if s_cnt[char] < t_cnt[char]:\n                return ''\n\n        ans = (len(s), 0, len(s)-1)\n        slide_cnt = Counter()\n        l, r = 0, 0\n        while r < len(s):\n            slide_cnt[s[r]] += 1\n            if any([slide_cnt[key] < t_cnt[key] for key in t_cnt]):\n                r += 1\n            else:\n                while all([t_cnt[key] <= slide_cnt[key] for key in t_cnt]):\n                    if (r - l + 1) < ans[0]:\n                        ans = (r - l + 1, l, r)\n                    slide_cnt[s[l]] -= 1\n                    l += 1\n                r += 1\n        \n        \n        l, r = ans[1], ans[2]\n        return s[l: r+1]\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}