{"id":493102991,"lang":"python3","time":"2Â months","timestamp":1621008135,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/493102991/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"15.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flatten(self, root: TreeNode) -> None:\n        cur = root\n        while cur:\n            if cur.left:\n                last = cur.left\n                while last.right:\n                    last = last.right\n                last.right = cur.right\n                cur.right = cur.left\n                cur.left = None                \n            cur = cur.right\n            ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}