{"id":246654165,"lang":"python3","time":"1 year, 11 months","timestamp":1564210704,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/246654165/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"14 MB","code":"class Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        row = [set() for _ in range(9)]\n        col = [set() for _ in range(9)]\n        matrix = [[set() for _ in range(3)] for __ in range(3)]\n        \n        for i in range(9):\n            for j in range(9):\n                char = board[i][j]\n                if char == \".\":\n                    continue\n                \n                # check row duplicate\n                if char in row[i]:\n                    return False\n                else:\n                    row[i].add(char)\n                    \n                if char in col[j]:\n                    return False\n                else:\n                    col[j].add(char)\n                \n                if char in matrix[i//3][j//3]:\n                    return False\n                else:\n                    matrix[i//3][j//3].add(char)\n        \n        return True\n                ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku"}