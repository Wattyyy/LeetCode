{"id":307085695,"lang":"python3","time":"1 year, 4 months","timestamp":1582726422,"status_display":"Accepted","runtime":"196 ms","url":"/submissions/detail/307085695/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"23.5 MB","code":"import heapq\nclass MedianFinder:\n\n    def __init__(self):\n        self.min_heap = []\n        heapq.heapify(self.min_heap)\n        self.max_heap = []\n        heapq.heapify(self.max_heap)\n        self.med = 0\n        self.cnt = 0\n        \n        \n\n    def addNum(self, num):\n        self.cnt += 1\n        if self.cnt == 1:\n            self.med = num\n            return\n        \n        if self.cnt == 2:\n            min_val, max_val = min(self.med, num), max(self.med, num)\n            heapq.heappush(self.max_heap, -min_val)\n            heapq.heappush(self.min_heap, max_val)\n            self.med = (-self.max_heap[0] + self.min_heap[0]) / 2\n            return\n\n        if self.cnt % 2 == 1:\n            if num < self.med:\n                heapq.heappush(self.max_heap, -num)\n                self.med = -self.max_heap[0]\n            else:\n                heapq.heappush(self.min_heap, num)\n                self.med = self.min_heap[0]\n\n        elif self.cnt % 2 == 0:\n            if num < self.med:\n                heapq.heappush(self.max_heap, -num)\n            else:\n                heapq.heappush(self.min_heap, num)\n            if len(self.max_heap) < len(self.min_heap):\n                val = heapq.heappop(self.min_heap)\n                heapq.heappush(self.max_heap, -val)\n            elif len(self.max_heap) > len(self.min_heap):\n                val = heapq.heappop(self.max_heap)\n                heapq.heappush(self.min_heap, -val)\n            self.med = self.med = (-self.max_heap[0] + self.min_heap[0]) / 2\n        \n\n    def findMedian(self):\n        return self.med\n\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()","compare_result":"111111111111111111","title_slug":"find-median-from-data-stream"}