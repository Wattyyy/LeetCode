{"id":304159295,"lang":"python3","time":"1 year, 4 months","timestamp":1581946924,"status_display":"Accepted","runtime":"4140 ms","url":"/submissions/detail/304159295/","is_pending":"Not Pending","title":"Largest Plus Sign","memory":"29.4 MB","code":"class Solution:\n    def orderOfLargestPlusSign(self, N, mines):\n        ans = 0\n        mines = set(map(tuple, mines))\n        if len(mines) == N**2:\n            return 0\n        # count left 1s at (i, j)\n        l_dp = [[0 for j in range(N)] for i in range(N)]\n        # count right 1s at (i, j)\n        r_dp = [[0 for j in range(N)] for i in range(N)]\n        # count upper 1s at (i, j)\n        u_dp = [[0 for j in range(N)] for i in range(N)]\n        # count downward 1s at (i, j)\n        d_dp = [[0 for j in range(N)] for i in range(N)]\n\n        for i in range(N):\n            for j in range(N):\n                # l_dp\n                if 0 <= j-1:\n                    l_dp[i][j] = (1 + l_dp[i][j-1]) if (i, j-1) not in mines else 0\n                # u_dp\n                if 0 <= i-1:\n                    u_dp[i][j] = (1 + u_dp[i-1][j]) if (i-1, j) not in mines else 0\n        \n        for i in reversed(range(N)):\n            for j in reversed(range(N)):\n                # r_dp\n                if j+1 <= N-1:\n                    r_dp[i][j] = (1 + r_dp[i][j+1]) if (i, j+1) not in mines else 0\n                # d_dp\n                if i+1 <= N-1:\n                    d_dp[i][j] = (1 + d_dp[i+1][j]) if (i+1, j) not in mines else 0\n\n        for i in range(N):\n            for j in range(N):\n                if (i, j) in mines:\n                    continue\n                ans = max(ans, min(l_dp[i][j], r_dp[i][j], u_dp[i][j], d_dp[i][j]))\n                \n        return ans + 1","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"largest-plus-sign"}