{"id":301981008,"lang":"python3","time":"1 year, 5 months","timestamp":1581326477,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/301981008/","is_pending":"Not Pending","title":"Max Points on a Line","memory":"16.6 MB","code":"from collections import defaultdict, Counter\nfrom decimal import *\nclass Solution:\n    def maxPoints(self, points):\n        N = len(points)\n        if N == 1 or N == 0: \n            return N\n        # (coef, intercept) -> points list\n        d = defaultdict(set)\n        # detect duplicate\n        c = Counter([tuple(point) for point in points])\n        keys = []\n        for key in c:\n            if c[key] <= 1: \n                keys.append(key)\n        for key in keys:\n            del c[key]\n\n        for i in range(N):\n            for j in range(i+1, N):\n                x1, y1 = points[i]\n                x2, y2 = points[j]\n                # calc coef and intercept\n                if x2 - x1 != 0:\n                    m = Decimal(y2 - y1) / Decimal(x2 - x1)\n                    b = m * (-x1) + y1\n                    d[(str(m), str(b))].add((x1, y1))\n                    d[(str(m), str(b))].add((x2, y2))\n                else:\n                    d[(str(x1))].add((x1, y1))\n                    d[(str(x1))].add((x2, y2))\n                    \n        ans = 1\n        for key, p_set in d.items():\n            tmp_val = 0\n            for c_key in c:\n                if c_key in p_set:\n                    tmp_val += (c[c_key] - 1)   \n            ans = max(ans, len(d[key]) + tmp_val)\n        return ans","compare_result":"1111111111111111111111111111111111111","title_slug":"max-points-on-a-line"}