// https://leetcode.com/problems/largest-time-for-given-digits

class Solution:
    def largestTimeFromDigits(self, A):
        output = []

        # first digit 
        tmp = -1
        for d in A:
            if d < 3:
                tmp = max(tmp, d)
        if tmp != -1:
            output.append(tmp)
            A.remove(tmp)
        else:
            return ''

        # second digit
        if output[0] == 2:
            tmp = -1
            for d in A:
                if d < 4:
                    tmp = max(tmp, d)
            if tmp != -1:
                output.append(tmp)
                A.remove(tmp)
            else:
                return ''
        else:
            tmp = max(A)
            output.append(tmp)
            A.remove(A)
        
                
        # third digit
        tmp = -1
        for d in A:
            if d < 6:
                tmp = max(tmp, d)
        if tmp != -1:
            output.append(tmp)
            A.remove(tmp)
        else:
            return ''
        

        output.append(A[0])
        res = str(output[0]) + str(output[1]) + ':' + str(output[2]) + str(output[3])
        return res


            

        
         