{"id":511036411,"lang":"python3","time":"3 weeks, 1 day","timestamp":1624268825,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/511036411/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"14.2 MB","code":"from typing import List\nclass Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        res = [[1], [1,1]]\n        if numRows == 1 or numRows == 2:\n            return res[:numRows]\n        for i in range(2, numRows):\n            tmp = []\n            prev = res[i-1]\n            for i, _ in enumerate(prev):\n                if i == 0:\n                    tmp.append(1)\n                else:\n                    tmp.append(prev[i] + prev[i-1])\n            tmp.append(1)\n            res.append(tmp[:])\n        return res","compare_result":"11111111111111","title_slug":"pascals-triangle"}