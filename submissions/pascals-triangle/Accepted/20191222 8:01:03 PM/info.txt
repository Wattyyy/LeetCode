{"id":287734871,"lang":"python3","time":"1 year, 6 months","timestamp":1577012463,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/287734871/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"12.8 MB","code":"# https://leetcode.com/problems/pascals-triangle/\n\nclass Solution:\n    def generate(self, numRows):\n        if numRows==1:\n            return [[1]]\n        dp = {} \n        dp[(1,1)] = 1\n        for i in range(2, numRows+1):\n            for j in range(1, i+1):\n                if j==1:\n                    dp[(i, j)] = 1\n                elif j==i:\n                    dp[(i, j)] = 1\n                else:\n                    dp[(i, j)] = dp[(i-1, j-1)] + dp[(i-1, j)]\n        ans = []\n        for i in range(1, numRows+1):\n            tmp = []\n            for j in range(1, i+1):\n                tmp.append(dp[(i, j)])\n            ans.append(tmp)\n            \n        return ans\n        \n        \n        \n        \n        ","compare_result":"111111111111111","title_slug":"pascals-triangle"}