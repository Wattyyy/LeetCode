{"id":293444703,"lang":"python3","time":"1 year, 6 months","timestamp":1578808649,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/293444703/","is_pending":"Not Pending","title":"Stream of Characters","memory":"N/A","code":"from collections import defaultdict\n\nclass TrieNode:\n    def __init__(self):\n        self.children_dic = defaultdict(TrieNode)\n        self.is_word = False\n        \n        \nclass StreamChecker:\n    def __init__(self, words):\n        self.root = TrieNode()\n        for word in words:\n            cur = self.root\n            for char in word:\n                if char not in cur.children_dic.keys():\n                    cur.children_dic[char] = TrieNode()\n                cur = cur.children_dic[char]\n            cur.is_word = True\n        self.cur = self.root\n        \n    def query(self, letter):\n        if letter not in self.cur.children_dic.keys():\n            self.cur = self.root\n            return False\n            \n        self.cur = self.cur.children_dic[letter]\n        if self.cur.is_word:\n            # no children\n            if not self.cur.children_dic.keys():\n                self.cur = self.root\n                return True\n            else:\n                return True\n        else:\n            # no children\n            if not self.cur.children_dic.keys():\n                self.cur = self.root\n                return False\n            else:\n                return False\n            \n\n# Your StreamChecker object will be instantiated and called as such:\n# obj = StreamChecker(words)\n# param_1 = obj.query(letter)","compare_result":"10000000000111111","title_slug":"stream-of-characters"}