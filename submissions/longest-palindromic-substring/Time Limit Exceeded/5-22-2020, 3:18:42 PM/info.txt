{"id":342958837,"lang":"python3","time":"1 year, 1 month","timestamp":1590128322,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/342958837/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"from collections import defaultdict\nclass Solution:\n    def longestPalindrome(self, s):\n        if not s:\n            return ''\n        N = len(s)\n        dp = defaultdict(bool)\n        for i in range(N):\n            dp[(i, i)] = True\n        for i in reversed(range(N-1)):\n            for j in range(i+1, N):\n                if i + 1 < j:\n                    if dp[(i+1, j-1)] and s[i] == s[j]:\n                        dp[(i, j)] = True\n                else:\n                    if s[i] == s[j]:\n                        dp[(i, j)] = True\n        # length, (i, j)\n        ans = (0, (0, 0))\n        for i in range(N):\n            for j in range(i, N):\n                if dp[(i, j)] and ans[0] < j - i + 1:\n                    ans = (j - i + 1, (i, j))\n        l, r = ans[1][0], ans[1][1]\n        return s[l:r+1]\n\n\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000","title_slug":"longest-palindromic-substring"}