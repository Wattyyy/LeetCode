{"id":316633359,"lang":"python3","time":"1 year, 3 months","timestamp":1585373896,"status_display":"Accepted","runtime":"4808 ms","url":"/submissions/detail/316633359/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"22.5 MB","code":"class Solution:\n    def longestPalindrome(self, s):\n        N = len(s)\n        dp = [[False for _ in range(N)] for __ in range(N)]\n        for i in range(N):\n            dp[i][i] = True\n        for l in reversed(range(N-1)):\n            for r in range(l+1, N):\n                if (r - l == 1) and (s[l] == s[r]):\n                    dp[l][r] = True\n                elif (s[l] == s[r]) and dp[l+1][r-1]:\n                    dp[l][r] = True\n        \n        ans = [0, '']\n        for l in range(N):\n            for r in range(l, N):\n                if dp[l][r] and (ans[0] < r - l + 1):\n                    ans[0] = r - l + 1\n                    ans[1] = s[l:r+1]\n        return ans[1]\n                \n                    \n                    \n                    \n            \n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}