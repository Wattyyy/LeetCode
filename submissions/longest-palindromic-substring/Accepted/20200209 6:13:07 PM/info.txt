{"id":301646322,"lang":"python3","time":"1 year, 5 months","timestamp":1581239587,"status_display":"Accepted","runtime":"7956 ms","url":"/submissions/detail/301646322/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"108.6 MB","code":"from collections import defaultdict\nclass Solution:\n    def longestPalindrome(self, s):\n        N = len(s)\n        if N==0:\n            return \"\"\n        \n        dp = defaultdict(bool)\n        for i in range(N):\n            dp[(i, i)] = True\n            if (i+1 < N) and (s[i] == s[i+1]):\n                dp[(i, i+1)] = True\n        \n        for i in reversed(range(N-2)):\n            for j in range(i+2, N):\n                if (dp[(i+1, j-1)]) and (s[i] == s[j]):\n                    dp[(i, j)] = True\n        \n        max_len = 0\n        res = \"\"\n        for i in range(N):\n            for j in range(i, N):\n                if (dp[(i, j)]) and (max_len < j-i+1):\n                    max_len = j-i+1\n                    res = s[i:j+1]\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}