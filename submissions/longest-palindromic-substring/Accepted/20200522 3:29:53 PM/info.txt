{"id":342962796,"lang":"python3","time":"1 year, 1 month","timestamp":1590128993,"status_display":"Accepted","runtime":"4900 ms","url":"/submissions/detail/342962796/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"22.4 MB","code":"class Solution:\n    def longestPalindrome(self, s):\n        N = len(s)\n        dp = [[False for _ in range(N)] for __ in range(N)]\n        for i in range(N):\n            dp[i][i] = True\n        for i in reversed(range(N-1)):\n            for j in range(i+1, N):\n                if i + 1 < j:\n                    if dp[i+1][j-1] and s[i] == s[j]:\n                        dp[i][j] = True\n                else:\n                    if s[i] == s[j]:\n                        dp[i][j] = True\n        ans_idx = [0, 0]\n        for i in range(N):\n            for j in range(i, N):\n                if dp[i][j] and (ans_idx[1] - ans_idx[0] < j - i):\n                    ans_idx[0], ans_idx[1] = i, j\n        l, r = ans_idx[0], ans_idx[1]\n        return s[l:r+1]\n\n\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}