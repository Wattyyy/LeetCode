{"id":216581127,"lang":"python3","time":"2 years, 3 months","timestamp":1553195769,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/216581127/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    \n    def __init__(self):\n        self.left_str = ''\n        self.right_str = ''\n    \n    \n    def longestPalindrome(self, s):\n        \n        if len(s)==0 or len(s)==1:\n            return self.left_str + s + self.right_str\n        \n        elif len(s)==2:\n            if s[0]==s[1]:\n                return self.left_str + s + self.right_str\n            else:\n                return ''\n            \n        elif s[0]==s[-1]:\n            self.left_str += s[0]\n            self.right_str = s[-1] + self.right_str\n            return self.longestPalindrome(s[1:-1])\n        \n        else:\n            return self.longestPalindrome(s[1:-1])\n            ","compare_result":"1111011001100110010010010011110001110110100000000000000000000000000000000000000000000000111111100111000","title_slug":"longest-palindromic-substring"}