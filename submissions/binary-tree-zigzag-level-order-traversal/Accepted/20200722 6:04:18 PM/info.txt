{"id":370056514,"lang":"python3","time":"11 months, 3 weeks","timestamp":1595408658,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/370056514/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nclass Solution:\n    def zigzagLevelOrder(self, root):\n        if not root:\n            return []\n        ans = []\n        queue = deque([root])\n        direction = 1\n        while queue:\n            nx = deque([])\n            tmp = []\n            for node in queue:\n                tmp.append(node.val)\n                if direction == 1:\n                    if node.left:\n                        nx.appendleft(node.left)\n                    if node.right:\n                        nx.appendleft(node.right)\n                else:\n                    if node.right:\n                        nx.appendleft(node.right)\n                    if node.left:\n                        nx.appendleft(node.left)\n            ans.append(tmp)\n            queue = nx\n            direction *= -1\n        return ans\n            \n                \n\n\n        ","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}