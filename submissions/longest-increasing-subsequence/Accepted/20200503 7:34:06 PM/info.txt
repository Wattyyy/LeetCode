{"id":333723990,"lang":"python3","time":"1 year, 2 months","timestamp":1588502046,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/333723990/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"14 MB","code":"from bisect import bisect_left\nclass Solution:\n    def lengthOfLIS(self, nums):\n        dp = [float('inf')] * len(nums)\n        ans = 0\n        tail_idx = -1\n        for num in nums:\n            idx = bisect_left(dp, num)\n            if tail_idx < idx:\n                dp[idx] = num\n                ans = max(ans, idx + 1)\n                tail_idx = idx\n            elif num < dp[idx]:\n                dp[idx] = num\n        return ans\n\n            \n\n            \n        \n        \n        ","compare_result":"111111111111111111111111","title_slug":"longest-increasing-subsequence"}