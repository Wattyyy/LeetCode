{"id":340669884,"lang":"python3","time":"1 year, 1 month","timestamp":1589711261,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/340669884/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"from bisect import bisect_left\nclass Solution:\n    def lengthOfLIS(self, nums):\n        if not nums:\n            return 0\n        dp = [0] * len(nums)\n        tmp = [float('inf')] * len(nums)\n        for i, v in enumerate(nums):\n            res = bisect_left(tmp, v)\n            tmp[res] = v\n            dp[i] = res\n        ans = 1\n        for i, v in enumerate(dp):\n            if v != float('inf'):\n                ans = max(v, ans)\n        print(tmp)\n        return ans + 1\n","compare_result":"110011110001101111111101","title_slug":"longest-increasing-subsequence"}