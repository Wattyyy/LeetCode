{"id":328580656,"lang":"python3","time":"1 year, 2 months","timestamp":1587566133,"status_display":"Accepted","runtime":"2352 ms","url":"/submissions/detail/328580656/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"17.7 MB","code":"class Solution:\n    def canPartition(self, nums):\n        S = sum(nums)\n        if S % 2 == 1:\n            return False\n        R, C = len(nums) + 1, int(S / 2) + 1\n        dp = [[False for _ in range(C)] for __ in range(R)]\n        dp[0][0] = True\n        nums = [0] + nums\n        for r in range(R):\n            for c in range(C):\n                if r == 0:\n                    continue\n                else:\n                    if 0 <= c - nums[r]:\n                        dp[r][c] = (dp[r-1][c] or dp[r-1][c - nums[r]])\n                    else:\n                        dp[r][c] = dp[r-1][c]\n        return dp[-1][-1]\n                                    \n                        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}