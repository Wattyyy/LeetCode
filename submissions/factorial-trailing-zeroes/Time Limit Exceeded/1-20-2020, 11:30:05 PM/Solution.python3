// https://leetcode.com/problems/factorial-trailing-zeroes

from collections import defaultdict
from math import sqrt
		
class Solution:
    def __init__(self):
        self.fac_cnt = defaultdict(int)
    
    def primeFactors(self, n): 
        while n % 2 == 0: 
            self.fac_cnt[2] += 1
            n = n // 2
        for i in range(3,int(sqrt(n))+1,2): 
            while n % i== 0: 
                self.fac_cnt[i] += 1
                n = n // i  
        if n > 2:
            self.fac_cnt[n] += 1
         
    def trailingZeroes(self, n):
        for i in range(1, n+1):
            self.primeFactors(i)
        return min(self.fac_cnt[2], self.fac_cnt[5])