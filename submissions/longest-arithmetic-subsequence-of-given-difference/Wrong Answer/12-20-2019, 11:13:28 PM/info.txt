{"id":287339650,"lang":"python3","time":"1 year, 6 months","timestamp":1576851208,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/287339650/","is_pending":"Not Pending","title":"Longest Arithmetic Subsequence of Given Difference","memory":"N/A","code":"from collections import defaultdict\nclass Solution:\n    def longestSubsequence(self, arr, difference):\n        if not arr:\n            return 0\n        if len(arr)==1:\n            return 1\n        N = len(arr)\n        dp = [0 for _ in range(N)]\n        val2len = defaultdict(int)\n        for i in reversed(range(N)):\n            val = arr[i]\n            val2len[val] = max(val2len[val], val2len[val+difference] + 1)\n            dp[i] = val2len[val]\n        \n        return dp[0]","compare_result":"11011100011010101010001000100000000000","title_slug":"longest-arithmetic-subsequence-of-given-difference"}