{"id":287340008,"lang":"python3","time":"1 year, 6 months","timestamp":1576851403,"status_display":"Accepted","runtime":"692 ms","url":"/submissions/detail/287340008/","is_pending":"Not Pending","title":"Longest Arithmetic Subsequence of Given Difference","memory":"26.2 MB","code":"from collections import defaultdict\nclass Solution:\n    def longestSubsequence(self, arr, difference):\n        if not arr:\n            return 0\n        if len(arr)==1:\n            return 1\n        N = len(arr)\n        dp = [0 for _ in range(N)]\n        val2len = defaultdict(int)\n        for i in reversed(range(N)):\n            val = arr[i]\n            val2len[val] = max(val2len[val], val2len[val+difference] + 1)\n            dp[i] = val2len[val]\n        \n        return max(dp)","compare_result":"11111111111111111111111111111111111111","title_slug":"longest-arithmetic-subsequence-of-given-difference"}