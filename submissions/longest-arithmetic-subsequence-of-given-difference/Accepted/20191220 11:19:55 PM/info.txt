{"id":287340383,"lang":"python3","time":"1 year, 6 months","timestamp":1576851595,"status_display":"Accepted","runtime":"872 ms","url":"/submissions/detail/287340383/","is_pending":"Not Pending","title":"Longest Arithmetic Subsequence of Given Difference","memory":"26.3 MB","code":"from collections import defaultdict\nclass Solution:\n    def longestSubsequence(self, arr, difference):\n        if not arr:\n            return 0\n        if len(arr)==1:\n            return 1\n        N = len(arr)\n        dp = [0 for _ in range(N)]\n        dp[-1] = 1\n        val2len = defaultdict(int)\n        for i in reversed(range(N)):\n            val = arr[i]\n            val2len[val] = max(val2len[val], val2len[val+difference] + 1)\n            if i!=N-1:\n                dp[i] = max(dp[i+1], val2len[val])\n        return dp[0]","compare_result":"11111111111111111111111111111111111111","title_slug":"longest-arithmetic-subsequence-of-given-difference"}