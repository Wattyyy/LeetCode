{"id":337682248,"lang":"python3","time":"1 year, 2 months","timestamp":1589181209,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/337682248/","is_pending":"Not Pending","title":"Flood Fill","memory":"13.9 MB","code":"class Solution:\n    def dfs(self, image, y, x, oldColor, newColor):\n        image[y][x] = newColor\n        nexts = [(y + 1, x), (y - 1, x), (y, x + 1), (y, x - 1)]\n        for ny, nx in nexts:\n            if 0 <= ny < len(image) and 0 <= nx < len(image[0]) and image[ny][nx] == oldColor:\n                self.dfs(image, ny, nx, oldColor, newColor)\n        \n    def floodFill(self, image, sr, sc, newColor):\n        oldColor = image[sr][sc]\n        if oldColor == newColor:\n            return image\n        self.dfs(image, sr, sc, oldColor, newColor)\n        return image\n        \n        \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}