{"id":322992314,"lang":"python3","time":"1 year, 3 months","timestamp":1586592653,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/322992314/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def __init__(self):\n        self.ans = 1\n        self.left, self.right = 0, 0\n        \n    def calc_left(self, node, val):\n        if not node.left and not node.right:\n            self.left = max(self.left, val)\n            return\n        if node.left:\n            self.calc_left(node.left, val+1)\n        if node.right:\n            self.calc_left(node.right, val+1)\n\n    def calc_right(self, node, val):\n        if not node.left and not node.right:\n            self.right = max(self.right, val)\n            return\n        if node.left:\n            self.calc_right(node.left, val+1)\n        if node.right:\n            self.calc_right(node.right, val+1)\n            \n    \n    def diameterOfBinaryTree(self, root):\n        if not root:\n            return 0\n        if root.left:\n            self.calc_left(root.left, 1)\n        if root.right:\n            self.calc_right(root.right, 1)\n        return self.left + self.right\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001011","title_slug":"diameter-of-binary-tree"}