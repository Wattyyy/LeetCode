{"id":323025782,"lang":"python3","time":"1 year, 3 months","timestamp":1586598716,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/323025782/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nfrom collections import defaultdict\nclass Solution:\n    def __init__(self):\n        self.graph = defaultdict(list)\n        self.max_dist = 0\n        self.max_dist_node = None\n\n\n    def create_graph(self, node):\n        if not node.left and not node.right:\n            return\n        if node.left:\n            self.graph[node].append(node.left)\n            self.graph[node.left].append(node)\n            self.create_graph(node.left)\n        if node.right:\n            self.graph[node].append(node.right)\n            self.graph[node.right].append(node)\n            self.create_graph(node.right)\n\n\n    def calc_diameter(self, node, visited, dist):\n        flag = False\n        for nx_node in self.graph[node]:\n            if nx_node not in visited:\n                flag = True\n                break\n        if flag:\n            for nx_node in self.graph[node]:\n                if nx_node not in visited:\n                    visited.add(nx_node)\n                    self.calc_diameter(nx_node, visited, dist+1)\n                    visited.remove(nx_node)\n        else:\n            if self.max_dist <= dist:\n                self.max_dist = dist\n                self.max_dist_node = node\n                return \n            \n    \n    def diameterOfBinaryTree(self, root):\n        if not root or (not root.left and not root.right):\n            return 0\n        self.create_graph(root)\n        self.calc_diameter(root, set([root]), 0)\n        self.max_dist = 0\n        self.calc_diameter(self.max_dist_node, set([self.max_dist_node]), 0)\n        return self.max_dist\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}