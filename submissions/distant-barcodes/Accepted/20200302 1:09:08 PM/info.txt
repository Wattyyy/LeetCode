{"id":308515869,"lang":"python3","time":"1 year, 4 months","timestamp":1583122148,"status_display":"Accepted","runtime":"604 ms","url":"/submissions/detail/308515869/","is_pending":"Not Pending","title":"Distant Barcodes","memory":"16 MB","code":"from collections import Counter\nimport heapq\nclass Solution:\n    def rearrangeBarcodes(self, barcodes):\n        barcodes = [str(val) for val in barcodes]\n        cnt = Counter(barcodes)\n        max_heap = [(-val, key) for key, val in cnt.items()]\n        heapq.heapify(max_heap)\n        prev_v, prev_k = heapq.heappop(max_heap)\n        ans = [prev_k]\n        while len(ans) < len(barcodes):\n            v, k = heapq.heappop(max_heap)\n            ans.append(k)\n            if prev_v + 1 < 0:\n                heapq.heappush(max_heap, (prev_v + 1, prev_k))\n            prev_v, prev_k = v, k\n        return ans\n\n\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"distant-barcodes"}