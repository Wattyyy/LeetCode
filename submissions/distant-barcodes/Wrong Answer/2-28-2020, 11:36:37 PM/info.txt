{"id":307697245,"lang":"python3","time":"1 year, 4 months","timestamp":1582900597,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/307697245/","is_pending":"Not Pending","title":"Distant Barcodes","memory":"N/A","code":"import heapq\nclass Solution:\n    def rearrangeBarcodes(self, barcodes: List[int]) -> List[int]:\n        N = len(barcodes)\n        max_heap = [-num for num in barcodes]\n        min_heap = [num for num in barcodes]\n        heapq.heapify(max_heap)\n        heapq.heapify(min_heap)\n        ans = []\n        for _ in range(N//2):\n            min_v = heapq.heappop(min_heap)\n            max_v = -heapq.heappop(max_heap)\n            ans.append(min_v)\n            ans.append(max_v)\n        if N % 2 == 1:\n            val = heapq.heappop(min_heap)\n            ans.append(val)\n        return ans\n","compare_result":"111111110010001100000000000000000000000000000001111101011","title_slug":"distant-barcodes"}