{"id":517068539,"lang":"python3","time":"1 week, 3 days","timestamp":1625371995,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/517068539/","is_pending":"Not Pending","title":"Max Sum of Rectangle No Larger Than K","memory":"N/A","code":"from typing import List\n\n\nclass Solution:\n    def maxSumSubmatrix(self, matrix: List[List[int]], k: int) -> int:\n        R = len(matrix)\n        C = len(matrix[0])\n        dp = [[0 for _ in range(C)] for __ in range(R)]\n        for r in range(R):\n            for c in range(C):\n                if c == 0:\n                    dp[r][c] = matrix[r][c]\n                else:\n                    dp[r][c] = dp[r][c-1] + matrix[r][c]\n        for r in range(1, R):\n            for c in range(C):\n                dp[r][c] = dp[r-1][c] + dp[r][c]\n\n                \n        ans = -float('inf')\n        for r1 in range(R):\n            for r2 in range(r1, R):\n                for c1 in range(C):\n                    for c2 in range(c1, C):\n                        if r1 == 0 and c1 == 0:\n                            val = dp[r2][c2]\n                        elif r1 == 0:\n                            val = dp[r2][c2] - dp[r2][c1-1]\n                        elif c1 == 0:\n                            val = dp[r2][c2] - dp[r1-1][c2]\n                        else:\n                            val = dp[r2][c2] - (dp[r1-1][c2] - dp[r1-1][c1-1]) - (dp[r2][c1-1] - dp[r1-1][c1-1]) - dp[r1-1][c1-1]\n                        \n                        if val <= k:\n                            ans = max(ans, val)\n        return ans\n\n\n","compare_result":"111111111111111111111111000000000000000","title_slug":"max-sum-of-rectangle-no-larger-than-k"}