{"id":298961925,"lang":"python3","time":"1 year, 5 months","timestamp":1580455273,"status_display":"Accepted","runtime":"212 ms","url":"/submissions/detail/298961925/","is_pending":"Not Pending","title":"Maximal Square","memory":"13.9 MB","code":"class Solution:\n    def maximalSquare(self, matrix):\n        if not matrix:\n            return 0\n        R, C = len(matrix), len(matrix[0])\n        # avoid all zero case\n        no_one = True\n        length = 1\n        for r in range(R):\n            for c in range(C):\n                if matrix[r][c] == \"1\":\n                    no_one = False\n                if r == 0 or c == 0:\n                    matrix[r][c] = int(matrix[r][c])\n                else:\n                    if (matrix[r][c] == \"1\") and (0 < matrix[r-1][c-1]) and (0 < matrix[r-1][c]) and (0 < matrix[r][c-1]):\n                        min_val = min(matrix[r-1][c-1], matrix[r-1][c], matrix[r][c-1])\n                        matrix[r][c] = min_val + 1\n                        length = max(length, min_val + 1)\n                    else:\n                        matrix[r][c] = int(matrix[r][c])            \n        if no_one:\n            return 0\n        else:\n            return length*length","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}