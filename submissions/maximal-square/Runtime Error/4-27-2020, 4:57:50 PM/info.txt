{"id":330830176,"lang":"python3","time":"1 year, 2 months","timestamp":1587974270,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/330830176/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"class Solution:\n    def maximalSquare(self, matrix):\n        R, C = len(matrix), len(matrix[0])\n        dp = [[0 for _ in range(C)] for __ in range(R)]\n        if matrix[0][0] == '1':\n            dp[0][0] = 1\n        \n        for c in range(1, C):\n            if matrix[0][c] == '1':\n                dp[0][c] = dp[0][c - 1] + 1\n        \n        for r in range(1, R):\n            if matrix[r][0] == '1':\n                dp[r][0] = dp[r - 1][0] + 1\n        \n        res = 1\n        for r in range(1, R):\n            for c in range(1, C):\n                if matrix[r][c] == '1':\n                    dp[r][c] = min(dp[r - 1][c - 1], dp[r - 1][c], dp[r][c - 1]) + 1\n                    res = max(dp[r][c], res)\n        return res ** 2\n\n        \n\n        ","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximal-square"}