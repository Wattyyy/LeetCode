{"id":240554434,"lang":"python3","time":"2Â years","timestamp":1562183160,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/240554434/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isValidBST(self, root: TreeNode) -> bool:\n        if self.check_nodes(root):\n            return True\n        else:\n            return False\n        \n    def check_nodes(self, node):\n        if node.left is None or node.right is None:\n            return True\n        left_val = node.left.val\n        right_val = node.right.val\n        if (left_val<node.val and node.val<right_val):\n            return (self.check_nodes(node.left) and self.check_nodes(node.right))\n        else:\n            return False\n        ","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"validate-binary-search-tree"}