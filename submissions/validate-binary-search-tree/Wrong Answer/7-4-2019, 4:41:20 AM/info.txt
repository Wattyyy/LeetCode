{"id":240553576,"lang":"python3","time":"2Â years","timestamp":1562182880,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/240553576/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isValidBST(self, root: TreeNode) -> bool:\n        if self.check_nodes(root)==False:\n            return False\n        else:\n            return True\n        \n    def check_nodes(self, node):\n        try:\n            left_val = node.left.val\n            right_val = node.right.val\n            if not ( left_val<node.val and node.val<right.val ):\n                return False\n            else:\n                self.check_nodes(node.left)\n                self.check_nodes(node.right)\n        except:\n            return  \n        ","compare_result":"101110010010010011111111111111111111001001000000110010011110000101010001100","title_slug":"validate-binary-search-tree"}