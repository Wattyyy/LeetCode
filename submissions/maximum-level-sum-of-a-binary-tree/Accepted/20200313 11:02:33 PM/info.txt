{"id":312080624,"lang":"python3","time":"1 year, 4 months","timestamp":1584108153,"status_display":"Accepted","runtime":"340 ms","url":"/submissions/detail/312080624/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"17.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def maxLevelSum(self, root):\n        self.ans = [0] * 10001\n        self.ans[0] = -float('inf')\n        def traverse(node, level):\n            self.ans[level] += node.val\n            if not node.left and not node.right:\n                return\n            if node.left:\n                traverse(node.left, level+1)\n            if node.right:\n                traverse(node.right, level+1)\n        traverse(root, 1)\n        tmp = [0, self.ans[0]]\n        for i, val in enumerate(self.ans):\n            if tmp[1] < val:\n                tmp = [i, val]\n        return tmp[0]\n\n\n        \n            \n        ","compare_result":"1111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree"}