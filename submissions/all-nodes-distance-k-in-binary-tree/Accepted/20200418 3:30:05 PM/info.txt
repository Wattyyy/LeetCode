{"id":326445297,"lang":"python3","time":"1 year, 2 months","timestamp":1587191405,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/326445297/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"14.3 MB","code":"from collections import defaultdict\n\nclass TreeNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n\nclass Solution:\n    def __init__(self):\n        self.graph = defaultdict(list)\n    \n    def create_graph(self, node, prev):\n        if prev:\n            self.graph[node.val].append(prev.val)\n        if not node.left and not node.right:\n            return\n        if node.left:\n            self.graph[node.val].append(node.left.val)\n            self.create_graph(node.left, node)\n        if node.right:\n            self.graph[node.val].append(node.right.val)\n            self.create_graph(node.right, node)\n\n\n    def distanceK(self, root, target, K):\n        self.create_graph(root, None)\n        res, visited = [], set()\n        nx_nodes = [(target.val, 0)]\n        res = []\n        while nx_nodes:\n            node_val, dist = nx_nodes.pop(0)\n            if dist == K:\n                res.append(node_val)\n            visited.add(node_val)\n            for next_node_val in self.graph[node_val]:\n                if next_node_val not in visited:\n                    nx_nodes.append((next_node_val, dist+1))\n        return res\n\n\n\n\n\n        \n        ","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree"}