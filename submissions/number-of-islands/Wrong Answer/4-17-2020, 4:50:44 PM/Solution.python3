// https://leetcode.com/problems/number-of-islands

class Solution:
    def dfs(self, y, x, grid):
        R, C = len(grid), len(grid[0])
        grid[y][x] = '0'
        for ny, nx in [(y + 1, x), (y - 1, x), (y, x + 1), (y, x - 1)]:
            if 0 <= ny and ny < R and 0 <= x and nx < C and grid[ny][nx] == '1':
                self.dfs(ny, nx, grid)

    def numIslands(self, grid):
        if not grid:
            return 0
        R, C = len(grid), len(grid[0])
        res = 0
        for r in range(R):
            for c in range(C):
                if grid[r][c] == '1':
                    self.dfs(r, c, grid)
                    res += 1
        return res
