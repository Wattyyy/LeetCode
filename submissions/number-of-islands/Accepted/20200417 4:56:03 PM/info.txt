{"id":326046372,"lang":"python3","time":"1 year, 2 months","timestamp":1587110163,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/326046372/","is_pending":"Not Pending","title":"Number of Islands","memory":"15.2 MB","code":"class Solution:\n    def dfs(self, y, x, grid):\n        R, C = len(grid), len(grid[0])\n        grid[y][x] = '0'\n        for ny, nx in [(y + 1, x), (y - 1, x), (y, x + 1), (y, x - 1)]:\n            if 0 <= ny and ny < R and 0 <= nx and nx < C and grid[ny][nx] == '1':\n                self.dfs(ny, nx, grid)\n\n    def numIslands(self, grid):\n        if not grid:\n            return 0\n        R, C = len(grid), len(grid[0])\n        res = 0\n        for r in range(R):\n            for c in range(C):\n                if grid[r][c] == '1':\n                    self.dfs(r, c, grid)\n                    res += 1\n        print(grid)\n        return res\n","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}