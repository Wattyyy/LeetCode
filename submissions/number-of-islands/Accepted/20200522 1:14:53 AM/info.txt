{"id":342685861,"lang":"python3","time":"1 year, 1 month","timestamp":1590077693,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/342685861/","is_pending":"Not Pending","title":"Number of Islands","memory":"15 MB","code":"class Solution:\n    def __init__(self):\n        self.ans = 0\n        \n    def dfs(self, y, x, grid):\n        grid[y][x] = '0'\n        for ny, nx in [(y+1, x), (y-1, x), (y, x+1), (y, x-1)]:\n            if 0 <= ny < len(grid) and 0 <= nx < len(grid[0]) and grid[ny][nx] == '1':\n                self.dfs(ny, nx, grid)\n                \n    def numIslands(self, grid):\n        if not grid:\n            return 0\n        for y in range(len(grid)):\n            for x in range(len(grid[0])):\n                if grid[y][x] == '1':\n                    self.dfs(y, x, grid)\n                    self.ans += 1\n        return self.ans\n        ","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}