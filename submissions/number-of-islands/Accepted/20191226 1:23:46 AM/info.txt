{"id":288479220,"lang":"python3","time":"1 year, 6 months","timestamp":1577291026,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/288479220/","is_pending":"Not Pending","title":"Number of Islands","memory":"13.8 MB","code":"from collections import deque\nclass Solution:\n    def numIslands(self, grid):\n        if not grid:\n            return 0\n            \n        Y, X = len(grid), len(grid[0])\n        def bfs(y, x):\n            q = deque([(y, x)])\n            dy = [0, 0, 1, -1]\n            dx = [1, -1, 0, 0]\n            while q:\n                y_1, x_1 = q.popleft()\n                for i in range(4):\n                    y_2 = y_1 + dy[i]\n                    x_2 = x_1 + dx[i]\n                    if 0<=y_2 and y_2<Y and 0<=x_2 and x_2<X and grid[y_2][x_2]==\"1\":\n                        q.append((y_2, x_2))\n                        grid[y_2][x_2] = \"0\"\n\n        \n        res = 0\n        for y in range(Y):\n            for x in range(X):\n                if grid[y][x]==\"1\":\n                    bfs(y, x)\n                    res += 1\n        return res","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}