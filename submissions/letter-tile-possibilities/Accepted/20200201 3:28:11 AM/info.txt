{"id":299058657,"lang":"python3","time":"1 year, 5 months","timestamp":1580495291,"status_display":"Accepted","runtime":"3824 ms","url":"/submissions/detail/299058657/","is_pending":"Not Pending","title":"Letter Tile Possibilities","memory":"14 MB","code":"from copy import deepcopy\n\nclass Solution:\n    def __init__(self):\n        self.ans_set = set()\n        \n    def dfs(self, str_list, tiles, visited, length):\n        if len(str_list)==length:\n            string = \"\".join(str_list)\n            self.ans_set.add(string)\n            return\n        for i in range(len(tiles)):\n            if i not in visited:\n                str_list_copy = deepcopy(str_list)\n                str_list_copy.append(tiles[i])\n                visited_copy = deepcopy(visited)\n                visited_copy.add(i)\n                self.dfs(str_list_copy, tiles, visited_copy, length)\n        \n    def numTilePossibilities(self, tiles):\n        N = len(tiles)\n        str_list = []\n        visited = set()\n        for length in range(1, N+1):\n            self.dfs(str_list, tiles, visited, length)\n        return len(self.ans_set)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"letter-tile-possibilities"}