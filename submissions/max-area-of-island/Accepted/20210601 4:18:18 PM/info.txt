{"id":501243892,"lang":"python3","time":"1 month, 1 week","timestamp":1622531898,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/501243892/","is_pending":"Not Pending","title":"Max Area of Island","memory":"17.1 MB","code":"from typing import List\n\nclass Solution:\n    def __init__(self) -> None:\n        self.cnt = 0\n\n    def helper(self, r: int, c: int, grid: List[List[int]]) -> int:\n        grid[r][c] = 0\n        self.cnt += 1\n        R, C = len(grid), len(grid[0])\n        for nr, nc in [(r+1, c), (r-1, c), (r, c+1), (r, c-1)]:\n            if 0 <= nr < R and 0 <= nc < C and grid[nr][nc] == 1:\n                self.helper(nr, nc, grid)\n        return\n\n    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:\n        R, C = len(grid), len(grid[0])\n        ans = 0\n        for r in range(R):\n            for c in range(C):\n                if grid[r][c] == 1:\n                    self.helper(r, c, grid)\n                    ans = max(ans, self.cnt)\n                    self.cnt = 0\n        return ans\n\n\n                    \n\n        \n        ","compare_resulttitle_slug":"max-area-of-island"}