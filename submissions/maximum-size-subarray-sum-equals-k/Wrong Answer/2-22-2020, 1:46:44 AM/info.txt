{"id":305494161,"lang":"python3","time":"1 year, 4 months","timestamp":1582303604,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/305494161/","is_pending":"Not Pending","title":"Maximum Size Subarray Sum Equals k","memory":"N/A","code":"from collections import defaultdict\nclass Solution:\n    def maxSubArrayLen(self, nums, k):\n        if not nums:\n            return 0\n        N = len(nums)\n        ans = 0\n        val2idx = defaultdict(list)\n        cum_sum = [0] * len(nums)\n        cum_sum[0] += nums[0]\n        for i in range(1, len(nums)):\n            cum_sum[i] = cum_sum[i-1] + nums[i]\n        \n        for i in range(N):\n            val2idx[k-cum_sum[i]].append(i)\n            if k - cum_sum[i] == 0:\n                ans = max(ans, i + 1)\n        \n        for i in range(N):\n            if -cum_sum[i] in val2idx:\n                # get maximum index\n                idx = val2idx[-cum_sum[i]][-1]\n                if idx - i > 1:\n                    ans = max(ans, idx - i)\n        return ans\n        \n","compare_result":"11111110111111111111111111111111101","title_slug":"maximum-size-subarray-sum-equals-k"}