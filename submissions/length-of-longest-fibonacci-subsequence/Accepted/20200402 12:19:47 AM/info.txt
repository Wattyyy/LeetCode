{"id":318205142,"lang":"python3","time":"1 year, 3 months","timestamp":1585754387,"status_display":"Accepted","runtime":"1020 ms","url":"/submissions/detail/318205142/","is_pending":"Not Pending","title":"Length of Longest Fibonacci Subsequence","memory":"22.3 MB","code":"from collections import defaultdict\nclass Solution:\n    def lenLongestFibSubseq(self, A):\n        N = len(A)\n        val2idx = defaultdict(int)\n        for i, v in enumerate(A):\n            val2idx[v] = i\n        dp = [[2 for _ in range(N)] for __ in range(N)]\n        for i in range(N):\n            for j in range(i+1, N):\n                if (A[i] + A[j]) in val2idx:\n                    idx = val2idx[A[i] + A[j]]\n                    dp[j][idx] = max(dp[j][idx], dp[i][j] + 1)\n        ans = 2\n        for i in range(N):\n            ans = max(max(dp[i]), ans)\n            \n        if ans == 2:\n            return 0\n        else:\n            return ans\n\n\n\n","compare_result":"111111111111111111111111111111111","title_slug":"length-of-longest-fibonacci-subsequence"}