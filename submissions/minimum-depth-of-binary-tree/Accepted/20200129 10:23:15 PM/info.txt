{"id":298431339,"lang":"python3","time":"1 year, 5 months","timestamp":1580304195,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/298431339/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"14.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def minDepth(self, root):\n        if not root:\n            return 0\n        ans = set()\n        def helper(node, depth):\n            if (not node.left) and (not node.right):\n                ans.add(depth)\n                return \n            if node.right:\n                helper(node.right, depth+1)\n            if node.left:\n                helper(node.left, depth+1)\n        helper(root, 1)\n        return min(ans)\n        \n        ","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}