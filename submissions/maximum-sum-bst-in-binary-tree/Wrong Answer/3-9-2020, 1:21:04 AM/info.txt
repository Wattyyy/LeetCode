{"id":310588052,"lang":"python3","time":"1 year, 4 months","timestamp":1583684464,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/310588052/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nimport sys\nsys.setrecursionlimit(10 ** 6)\nclass Solution:\n    def maxSumBST(self, root):\n        if not root:\n            return 0\n        self.ans = -float('inf')\n        def dp(node, l_lim, u_lim):\n            # @returns -> BST_sum, is_BST         \n            if not node.left and not node.right:\n                self.ans = max(self.ans, node.val)\n                return node.val, True\n                \n            elif node.left and not node.right:\n                l_sum, is_bst = dp(node.left, l_lim, node.val)\n                if is_bst and node.left.val < node.val and l_lim < node.val and node.val < u_lim:\n                    self.ans = max(self.ans, l_sum + node.val)\n                    return l_sum + node.val, True \n                else:\n                    return 0, False\n        \n            elif not node.left and node.right:\n                r_sum, is_bst = dp(node.right, node.val, u_lim)\n                if is_bst and node.val < node.right.val and l_lim < node.val and node.val < u_lim:\n                    self.ans = max(self.ans, r_sum + node.val)\n                    return r_sum + node.val, True \n                else:\n                    return 0, False\n            \n            else:\n                l_sum, l_is_bst = dp(node.left, l_lim, node.val)\n                r_sum, r_is_bst = dp(node.right, node.val, u_lim)\n                if l_is_bst and r_is_bst and node.left.val < node.val and node.val < node.right.val and l_lim < node.val and node.val < u_lim:\n                    self.ans = max(self.ans, l_sum + node.val + r_sum)\n                    return l_sum + node.val + r_sum, True \n                else:\n                    return 0, False\n            \n        dp(root, -float('inf'), float('inf'))\n        return self.ans\n                \n                \n            \n        ","compare_result":"1101100110000101110000000000000000000000100000000000010","title_slug":"maximum-sum-bst-in-binary-tree"}