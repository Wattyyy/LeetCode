{"id":414483734,"lang":"python3","time":"8 months, 2 weeks","timestamp":1603960943,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/414483734/","is_pending":"Not Pending","title":"Maximize Distance to Closest Person","memory":"15.4 MB","code":"from bisect import bisect_left\nclass Solution:\n    def maxDistToClosest(self, seats):\n        num_set = set()\n        sorted_arr = []\n        for i, v in enumerate(seats):\n            if v == 1:\n                sorted_arr.append(i)\n                num_set.add(i)\n        \n        res = -1\n        for i, _ in enumerate(seats):\n            if i in num_set:\n                continue\n            idx = bisect_left(sorted_arr, i)\n            if idx == 0:\n                res = max(res, sorted_arr[0])\n            elif idx == len(sorted_arr):\n                res = max(res, i - sorted_arr[-1])\n            else:\n                mid = (sorted_arr[idx] + sorted_arr[idx - 1]) // 2\n                res = max(res, min(sorted_arr[idx] - mid, mid - sorted_arr[idx - 1]))\n        print(sorted_arr)\n        return res\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-distance-to-closest-person"}