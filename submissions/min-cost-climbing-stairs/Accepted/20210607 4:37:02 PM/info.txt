{"id":504304275,"lang":"rust","time":"1Â month","timestamp":1623051422,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/504304275/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"2 MB","code":"use std::cmp::min;\n\nimpl Solution {\n    pub fn min_cost_climbing_stairs(cost: Vec<i32>) -> i32 {\n        let mut dp = vec![0; cost.len()];\n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        for (i, val) in cost.iter().enumerate(){\n            if i < 2{\n                continue\n            }\n            dp[i] = min(dp[i-2] + val, dp[i-1] + val)\n        }\n        return min(dp[cost.len()-1], dp[cost.len()-2])\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs"}