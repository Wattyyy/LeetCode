{"id":240027562,"lang":"python3","time":"2Â years","timestamp":1562006654,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/240027562/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"13.1 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        # avoid index error\n        cost = [0] + cost + [0]\n        length = len(cost)\n        memo = {}\n        memo[0], memo[1] = cost[0], cost[1]\n        \n        for i in range(2, length):\n            memo[i] = min( memo[i-2]+cost[i], memo[i-1]+cost[i] )\n            \n        return memo[length-1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs"}