{"id":481920249,"lang":"python3","time":"2 months, 3 weeks","timestamp":1618702112,"status_display":"Accepted","runtime":"976 ms","url":"/submissions/detail/481920249/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"15.2 MB","code":"from collections import defaultdict\nclass Solution:\n    def numSubmatrixSumTarget(self, M: List[List[int]], T: int) -> int:\n        xlen, ylen, ans, res = len(M[0]), len(M), 0, defaultdict(int)\n        for r in M:\n            for j in range(1, xlen):\n                r[j] += r[j-1]\n        for j in range(xlen):\n            for k in range(j, xlen):\n                res.clear()\n                res[0], csum = 1, 0\n                for i in range(ylen):\n                    csum += M[i][k] - (M[i][j-1] if j else 0)\n                    ans += res[csum - T]\n                    res[csum] += 1\n        return ans","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target"}