{"id":328523903,"lang":"python3","time":"1 year, 2 months","timestamp":1587553416,"status_display":"Accepted","runtime":"980 ms","url":"/submissions/detail/328523903/","is_pending":"Not Pending","title":"Path Sum III","memory":"14.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def __init__(self):\n        self.ans = 0\n\n    def traverse(self, node, val, sum):\n        if val == sum:\n            self.ans += 1\n        if not node.left and not node.right:\n            return\n        if node.left:\n            val += node.left.val\n            self.traverse(node.left, val, sum)\n            val -= node.left.val\n        if node.right:\n            val += node.right.val\n            self.traverse(node.right, val, sum)\n            val -= node.right.val\n\n    def dfs(self, node, sum):\n        if not node:\n            return\n        self.traverse(node, node.val, sum)\n        self.dfs(node.left, sum)\n        self.dfs(node.right, sum)\n        \n    def pathSum(self, root, sum):\n        self.dfs(root, sum)\n        return self.ans\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}