{"id":315357758,"lang":"python3","time":"1 year, 3 months","timestamp":1585014046,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/315357758/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"N/A","code":"from collections import defaultdict, Counter\nfrom copy import deepcopy\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nclass Solution:\n    def findItinerary(self, tickets):\n        graph = defaultdict(list)\n        edge_counter = Counter()\n        for f, t in tickets:\n            graph[f].append(t)\n            edge_counter[(f, t)] += 1\n\n        output = []\n        def backtrack(node='JFK', current=['JFK']):\n            if any([edge_counter[(node, nx)] != 0 for nx in graph[node]]):\n                for nx in graph[node]:\n                    if edge_counter[(node, nx)] != 0:\n                        current.append(nx)\n                        edge_counter[(node, nx)] -= 1\n                        backtrack(nx, current)\n                        current.pop()\n                        edge_counter[(node, nx)] += 1\n            else:\n                if all([edge_counter[key] == 0 for key in edge_counter.keys()]):\n                    output.append(deepcopy(current))\n        backtrack()\n        output = sorted(output)\n        return output[0]","compare_result":"11111111111000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reconstruct-itinerary"}