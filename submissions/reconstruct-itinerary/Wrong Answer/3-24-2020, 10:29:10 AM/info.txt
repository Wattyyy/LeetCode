{"id":315355006,"lang":"python3","time":"1 year, 3 months","timestamp":1585013350,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/315355006/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"N/A","code":"from collections import defaultdict\nfrom copy import deepcopy\n\nclass Solution:\n    def findItinerary(self, tickets):\n        graph = defaultdict(list)\n        for f, t in tickets: graph[f].append(t)\n        output = []\n        def backtrack(node='JFK', current=['JFK'], visited = set()):\n            if any([(node, nx) not in visited for nx in graph[node]]):\n                for nx in graph[node]:\n                    if (node, nx) not in visited:\n                        current.append(nx)\n                        visited.add((node, nx))\n                        backtrack(nx, current, visited)\n                        current.pop()\n                        visited.remove((node, nx))\n            else:\n                output.append(deepcopy(current))\n        backtrack()\n        output = sorted(output)\n        return output[0]\n        \n\n            \n\n\n        ","compare_result":"11110110000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reconstruct-itinerary"}